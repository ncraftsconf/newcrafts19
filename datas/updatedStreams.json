[{
        "Id": "mathiasverraes",
        "FirstName": "Mathias",
        "LastName": " Verraes",
        "Company": "Value Object",
        "Bio": "Mathias Verraes is an independent consultant. He advises companies on how to build enterprise applications for complex business domains. He specializes in curing large legacy projects: the kind where there's half a million lines of spaghetti code, and nobody knows how to get the project under control. As a blogger and and a speaker, Mathias is on a mission to spread the ideas of Domain Driven Design in the web development world. He's the founder of the Belgian DDD community. When he's not working, he's at home in Kortrijk, Belgium, helping his two sons build Lego train tracks.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/MathiasVerraes.jpg",
        "Site": "",
        "Twitter": "mathiasverraes",
        "Github": "mathiasverraes",
        "Updated": true,
        "Sessions": [{
                "Id": "nc16-mve01",
                "Event": "newcrafts2016",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2016-05-13T08:45:00Z",
                "Room": "Orval",
                "Title": "Designed Stickiness",
                "Abstract": "When we model, we tend to do it for ourselves: gain understanding, capture the business language, and turn it into running code. But are we missing opportunities to do something more with our models? What if, instead of mirroring the business, our models could transform it? Let's find out how a healthy obsession with language and metaphor can step up from `domain-driven` to `driving the domain`.",
                "VideoUrl": "http://videos.ncrafts.io/video/167722762",
                "VideoId": "167722762",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design",
                    "DDD"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-mve02",
                "Event": "newcrafts-paris-2019",
                "Format": "pre-conference-workshop",
                "DurationMinutes": 420,
                "Order": 0,
                "StartTime": "2019-05-15T09:00:00",
                "Room": "Room #1",
                "Title": "DDD Modelling vs Implementation",
                "Abstract": "The design patterns from Domain-Driven Design are gradually entering the collective consciousness of software developers. But most of the information out there focuses on mechanistic implementation details of the patterns: how to make an Entity in [insert favourite programming language], how to use the Repository pattern with [insert new hot ORM], how to make immutable Value Objects in [insert legacy framework]...\n\nApplied individually, these patterns are useful, but are not giving you the full potential of Domain-Driven Design.\n\nThis one day training has a different approach. We address technical concerns in implementing the DDD patterns, but the focus is on the underlying principles and heuristics for building great domain-centric object-oriented code.\n\n- Why you’re underusing Value Objects\n- Seeing objects as containers of lifecycles and consistency\n* Discovering deeper domain concepts such as business rules, and lifting them into first class domain objects\n- The relevance of processes, behaviour, temporal modelling... for finding better Aggregate boundaries\n- How mutable software designs have distorted our perception of mutability in the domain\n- Better heuristics for understanding a complex domain, and using them to drive a more focused design\n- Reducing our dependance on service classes\n- Designing an implementation model that not only encapsulates the domain, but communicates that design to future programmers and reduces their surface area for bugs\n- ...\n\nThis workshop, aimed at programmers, is designed to give you immediate benefits when modelling and implementing the most important parts of your codebase.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            },
            {
                "Id": "nc19-mve01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-17T11:30:00",
                "Room": "Liskov",
                "Title": "Temporal Modelling",
                "Abstract": "Distributed systems are all about time. Traditional modelling styles, focused on things and structures, are not the primary way anymore to build modern systems that handle complexity well. Entity-centric designs tend to have an uneasy relation with events happening over time. The actual business processes, the heart of how organisations operate, end up hidden in the many calls between services.\n\nTemporal Modelling is the cure: build models and systems that make events and processes the first class building blocks of a domain model. In this talk, we’re going to look at how reasoning with time helps us better understand how to build our software.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "kenny_baas",
        "FirstName": "Kenny",
        "LastName": " Baas-Schwegler",
        "Company": null,
        "Bio": "Kenny Baas-Schwegler is a software engineer and consultant focusing on building quality into software delivery at Xebia. He mentors, coaches and consults teams by using practices techniques and tools from Domain Driven Design, Behaviour Driven Development, Test Driven Development, and Continuous Delivery.\n\nThrough Aikido training he learned the most efficient way to work together. To get the outcome that all parties want, energy should not be blocked but should be bent and influenced. The philosophy behind this line of reasoning is not only embedded in his personal life, but also in his work life. He is an advocate for multidisciplinary collaboration in open spaces. By using and combining tools such as EventStorming, and Example Mapping, he helps engineer requirements to design and model software. With these approaches, he aims to create a transparent, collaborative space with constant and instant feedback when delivering software.\n\nBesides his daily work, he also helps organise several meetups for Behaviour Driven Development NL, Domain Driven Design Nederland and EventStorming Netherlands and also often speaks and gives hands-on workshops at conferences and meetups. ",
        "ShortBio": "Domain Whisperer - EventStormer - Software Consultant @Xebia",
        "Photo": "/assets/img/speakers/KennyBaas-Schwegler.jpg",
        "Site": "https://baasie.com/",
        "Twitter": "kenny_baas",
        "Github": "",
        "Updated": true,
        "Sessions": [{
                "Id": "nc19-kba02",
                "Event": "newcrafts-paris-2019",
                "Format": "pre-conference-workshop",
                "DurationMinutes": 420,
                "Order": 0,
                "StartTime": "2019-05-15T09:00:00",
                "Room": "Room #2",
                "Title": "EventStorming and Example Mapping From Problem Space to Solution Space",
                "Abstract": "Creating multiple models for the same problem is one of the more important lessons that Domain Driven Design teaches us. It is a lot cheaper to quickly iterate over them and throw away less useful prototypes before we even start coding. However, creating multiple models can be hard. When we begin gaining insight from our domain, we suffer a lot from cognitive biases that get in our way to gain new insights. We need these insights before we even start thinking about modelling. Tools like event storming and example mapping can help us to deliberate discover, and battle these biases. They help you quickly gain insight into the problem space. But the fallacy here is that we can get locked into the tool, and get stuck again.\n\n**What you will learn**  \nIn this workshop, you will learn the essentials of event storming and how it can help you gain the necessary insights you need to deliver quality software. With our newly acquired domain knowledge, we can then start exploring the solution space. During the exploration, we begin to design and model multiple models for the same problem with Domain Driven Design patterns. This way of visualising gives us the power to quickly iterate over the different models and figure out which model will be the best to use for now. Eventually, we start our coding journey TDD style, iterating over the model to refactor towards deeper insights while discovering how hexagonal architecture may help us to protect our domain code from the technical concerns, in the long run.  \n\n**Target Audience**  \nThis workshop is for you if you are a software architect or software developer.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            },
            {
                "Id": "nc19-kba01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-17T16:00:00",
                "Room": "Hopper",
                "Title": "I got Trapped! Systems thinking traps of IT Teams and how to battle them",
                "Abstract": "Donella Meadows book, Thinking in Systems, is a concise and crucial book offering insight on how to think about systems, how to control systems and how systems change and control themselves. A system is a group of interacting, interrelated or interdependent parts unified to have a purpose. Examples can be a heating system, a tree, a human, a social system, an IT system, and IT Teams working as a part in a company which is also again a system.\n\nFor me, the most interesting part of the book is about system traps. They are traps in where systems can go wrong without noticing. Since reading the book I started observing these traps in my day to day work. Traps like seeking the wrong goal with a code coverage threshold, shifting the burden to an intervener by letting a separate QA team be responsible for quality. Join me in this talk where I will go into more of these system traps I observed in IT teams, and what I did to get out of these traps. ",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": null
    },
    {
        "Id": "KevlinHenney",
        "FirstName": "Kevlin",
        "LastName": " Henney",
        "Company": "Curbralan",
        "Bio": "Kevlin Henney is an independent consultant, speaker, writer and trainer. His development interests are in patterns, programming, practice and process. He has contributed to open- and closed-source development, has been a columnist for a number of magazines and sites and has been on far too many committees (it has been said that \"a committee is a cul-de-sac down which ideas are lured and then quietly strangled\"). He is co-author of _A Pattern Language for Distributed Computing_ and _On Patterns and Pattern Languages_ and editor of _97 Things Every Programmer Should Know_. He lives in Bristol and online.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/KevlinHenney.jpg",
        "Site": "https://about.me/kevlin",
        "Twitter": "KevlinHenney",
        "Github": "kevlinhenney",
        "Updated": true,
        "Sessions": [{
                "Id": "nc18-khe01",
                "Event": "newcrafts2018",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2018-05-18T09:30:00Z",
                "Room": "keynote",
                "Title": "Refactoring to Immutability",
                "Abstract": "It has been said that immutability changes everything. But what does that mean in practice? What does it mean for existing code that looks more like the mutant apocalypse than an elegant application of mathematical thinking? Immutability can be an ideal that is hard to reach. Refactoring, on the other hand, is all about the art of the possible. In this talk we'll be clarifying motivation and exploring some approaches to help reducing state mutability in code.",
                "VideoUrl": "http://videos.ncrafts.io/video/276832516",
                "VideoId": "276832516",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design",
                    "Architecture"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-khe02",
                "Event": "newcrafts-paris-2019",
                "Format": "pre-conference-workshop",
                "DurationMinutes": 420,
                "Order": 0,
                "StartTime": "2019-05-15T09:00:00",
                "Room": "Room #3",
                "Title": "Refactoring to Immutability",
                "Abstract": "It has been said that immutability changes everything. But what does that mean in practice? What does it mean for existing code that looks more like the mutant apocalypse than an elegant application of mathematical thinking?\n\nImmutability can be an ideal that is hard to reach. Refactoring, on the other hand, is all about the art of the possible. In this hands-on workshop, we'll be looking at some tricks and tips to help reduce the mutability of code.\n\nSo bring a laptop, but don't worry about IDEs, editors, compilers and all that — just browser and WiFi! We'll be running the hands-on part using cyber-dojo.org, working with unit tests, promiscuous pairing and good humour :-)",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            },
            {
                "Id": "nc19-khe01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T14:00:00",
                "Room": "Liskov",
                "Title": "The Passions of Programming",
                "Abstract": "\"We're looking for passionate programmers!\" says the job ad. For a love-in or a development role? _Passion_ is used to evoke single-mindedness, drive and intensity, but it also has many other meanings, surely not all of which can be intended. Love aside, passion also spills over into irrationality, aggression — e.g., crimes of passion — and unconditional and unquestioning pursuit of ideas. Our acceptance of this word and this quality should be partial and conditional. But there is more than one kind of passion, and when raw passion is tempered with compassion and dispassion we start to see a more balanced way of development.\n\nGood development draws on both creativity and rationality, on both experience and experimentation, on both focus and connection, on both individual skill and group intelligence. The dry language of productivity needs to admit the possibility of enjoyment; the culture of burn-out needs to give way to humanity and empathy. Let's explore the many passions of programming.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en"
        ]
    },
    {
        "Id": "WoodyZuill",
        "FirstName": "Woody",
        "LastName": " Zuill",
        "Company": null,
        "Bio": "Woody Zuill is an independent Agile Guide and Coach and has been programming computers for 35+ years. He is a pioneer of the Mob Programming approach to teamwork in software development, and is one of the founders of the \"#NoEstimates\" discussion on Twitter. His passion is to work with teams to create an environment where each one of us can excel in our work and in our life. He loves working with legacy code, and believes that code must be kept simple, clean, and easy to work on so we can work just as fast tomorrow as we can today. ",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/WoodyZuill.jpg",
        "Site": "http://zuill.us/WoodyZuill/",
        "Twitter": "WoodyZuill",
        "Github": "",
        "Updated": true,
        "Sessions": [{
                "Id": "nc19-wzu02",
                "Event": "newcrafts-paris-2019",
                "Format": "pre-conference-workshop",
                "DurationMinutes": 420,
                "Order": 0,
                "StartTime": "2019-05-15T09:00:00",
                "Room": "Room #4",
                "Title": "Mob Programming",
                "Abstract": "Mob Programming: All the brilliant people working on the same thing, at the same time, in the same place, and on the same computer.\n\nMob Programming is a cost-effective, collaborative and fun way to get work done together. It's a whole-team approach to development, where coding, designing, testing, and working with the \"customer\" (partner, Product Owner, User, etc.) is all done as a team.\n\nParticipants in this workshop experience a day of learning and doing Mob Programming. We cover the mechanics of how to work together as a Mob as well as the techniques that make this form of development so effective.\n\nWe’ll learn how a Mob performs sample project work, including user stories, prioritization, test-driven development, refactoring, and retrospectives.\n\nDesigned and facilitated by Mob Programming pioneer Woody Zuill, this workshop provides a hands-on education.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            },
            {
                "Id": "nc19-tbr01",
                "Event": "newcrafts-paris-2019",
                "Format": "Quick Hands-on",
                "DurationMinutes": 60,
                "Order": 0,
                "StartTime": "2019-05-17T13:45:00",
                "Room": "Goldberg",
                "Title": "Estimates or No Estimates, Let's explore the possibilities",
                "Abstract": "Let’s explore the purpose and use of estimates in the management of software development efforts, and consider possible alternatives.\nWhy do we estimate and are we making estimates that are actually useful?  We say we depend on estimates to make important decisions, and yet we’re often disappointed by the results.\nWhy are we so challenged at estimation?  Are estimates for cost, time, or effort always needed? Is it possible there are other ways to approach our work?  If we didn’t estimate, how could we still be successful at making business decisions?\nThere are a number of things to explore and many questions to ask. For example, do we really need estimates for all the things we are currently using them? Are we getting a reasonable benefit from them? Is it possible to manage software development projects without these estimates, or at least with fewer estimates?  Is there a way to prove that estimates are helping us make good decisions?\nIn this session we’ll participate in some interactive information gathering exercises to see if we can gain a shared idea of our current understanding of the purpose and use of estimates.\nWe will examine the nature of software development. Our exploration goal is to see if we can work together to come up with some ideas about eliminating or improving on the traditional approaches to using estimates.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": null
    },
    {
        "Id": "Ulrikama",
        "FirstName": "Ulrika",
        "LastName": " Malmgren",
        "Company": "",
        "Bio": "Test specialist turned Agile Coach turned Programmer. Loves exploring the field of Software Development from different perspectives to uncover the mechanisms at play in between technologies or humans (or technologies and humans).",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/UlrikaMalmgren.jpg",
        "Site": "https://natooktesting.wordpress.com/",
        "Twitter": "Ulrikama",
        "Github": "",
        "Updated": false,
        "Sessions": [{
                "Id": "nc19-uma01",
                "Event": "newcrafts2019",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2019-05-16T09:30:00Z",
                "Room": "dijkstra",
                "Title": "The one with the compiler always wins",
                "Abstract": "After having worked as a tester, an agile coach and a programmer, I’ve seen and experienced software development from different perspectives. One of the things that has stuck with me the most is how limited our view of quality is. While we struggle with our unit tests or test cases, we’re missing out on some fundamental factors which affect quality. Instead of putting your faith in hiring more testers or sorting out if a test is a unit test or an integration test it is possible expand your view and work deeply with quality. \n      This talk is designed to introduce three major perspectives which impact quality and give concrete tips for how to work with each of them.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Testing",
                    "Practices",
                    "Agile"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc18-uma01",
                "Event": "newcrafts2018",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2018-05-18T11:45:00Z",
                "Room": "dijkstra",
                "Title": "Committing to quality",
                "Abstract": "After having worked as a tester, an agile coach and a programmer, I’ve seen and experienced software development from different perspectives. One of the things that has stuck with me the most is how limited our view of quality is. While we struggle with our unit tests or test cases, we’re missing out on some fundamental factors which affect quality. Instead of putting your faith in hiring more testers or sorting out if a test is a unit test or an integration test it is possible expand your view and work deeply with quality. \n      This talk is designed to introduce three major perspectives which impact quality and give concrete tips for how to work with each of them.",
                "VideoUrl": "http://videos.ncrafts.io/video/275529963",
                "VideoId": "275529963",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Quality",
                    "Practices",
                    "Agile"
                ],
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "SamirTalwar",
        "FirstName": "Samir",
        "LastName": " Talwar",
        "Company": null,
        "Bio": "All-round software developer with experience in infrastructure engineering, software craftsmanship, and consultancy. Speaker on software development principles and practices across Europe, former software coach and organiser of Software Craftsmanship London.",
        "ShortBio": "CTO of @ProdoAI",
        "Photo": "/assets/img/speakers/SamirTalwar.jpg",
        "Site": "",
        "Twitter": "SamirTalwar",
        "Github": "SamirTalwar",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-sta01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T10:30:00",
            "Room": "Lovelace",
            "Title": "Teaching a machine to code",
            "Abstract": "At [Prodo.AI](http://prodo.ai/), we’re teaching machines to write code for humans. Using the latest in Deep Learning techniques, we can generate code that’s not just functional, but beautiful. Our goal is to make the computer do the heavy lifting so you can concentrate on the important things: being creative, solving problems, and having fun.We’ve tried a hundred different ways of encoding the knowledge of *how* to write code. In this talk, Samir will take you through a tour of the different techniques, architectures and optimisations we’ve tried in the process of teaching a machine to write code, using neural networks, simulations and everything in between.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "einarwh",
        "FirstName": "Einar",
        "LastName": " Høst",
        "Company": "NRK",
        "Bio": "Einar W. Høst is a computer at NRK, the Norwegian public broadcaster. He thinks that programs should be written for people to read and also for machines to laugh at. He has a PhD in Computer Science from the University of Oslo.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/EinarHost.jpg",
        "Site": "",
        "Twitter": "einarwh",
        "Github": "https://api.github.com/users/einarwh",
        "Updated": true,
        "Sessions": [{
                "Id": "nc17-eho01",
                "Event": "newcrafts2017",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-18T08:45:00Z",
                "Room": "Lovelace",
                "Title": "Bringing Lambda Calculus to Life",
                "Abstract": "You might know that the lambda calculus is the theoretical foundation for all functional programming languages - but what is it really, and how does it work? In this talk, we'll bring the theory to life! Using F# and the fparsec library, we will write a working lambda calculus interpreter from scratch. We'll even have time left to demonstrate how we can use it to do something useful, like adding numbers!",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Languages"
                ],
                "Cospeakers": [{
                    "Name": "Jonas Winje",
                    "Link": "/speaker/JonasWinje",
                    "Id": null,
                    "Photo": "/speakers/JonasWinjeNB.jpg"
                }]
            },
            {
                "Id": "nc19-eho01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T11:30:00",
                "Room": "Lovelace",
                "Title": "Escher in Elm",
                "Abstract": "his is a live coding session based on a classic 1982 paper by Peter Henderson. The paper shows the decomposition and reconstruction of Escher's woodcutting \"Square Limit\", a beautiful recursive tessellation of interleaving fish, using functional programming. We will define a set of functions that operate on pictures - transforming them and composing them into more complex pictures. With these functions implemented, we will follow in Henderson's footsteps to create a replica of Escher's Square Limit as an SVG. We will use Elm as the implementation language.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": null
    },
    {
        "Id": "thinkb4coding",
        "FirstName": "Jérémie",
        "LastName": " Chassaing",
        "Company": "",
        "Bio": "Jérémie Chassaing is the founder of Hypnotizer, an interactive video solution and creator of BBCG. He is also the editor of PixVillage, a P2P photo sharing software. He joined Siriona in 2007 as an architect with former associates to enhance Availpro, a channel manager for independent hotels, to increase scalability and reliability to match its rapid growth. He is a member of the advisory board for Microsoft Patterns & Practices book about CQRS and Event Sourcing: \"A CQRS Journey\" and an active member of the F# community. You can also see his blog thinkbeforecoding, a blog dedicated to Domain Driven Design, CQRS and Event Sourcing.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/JeremieChassaing.jpg",
        "Site": "",
        "Twitter": "thinkb4coding",
        "Github": "https://api.github.com/users/thinkbeforecoding",
        "Updated": true,
        "Sessions": [{
                "Id": "nc18-jch01",
                "Event": "newcrafts2018",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2018-05-18T11:45:00Z",
                "Room": "kay",
                "Title": "Ukulele tabs in F#",
                "Abstract": "A Fun(ctional) music DSL - Domain Specific Languages - to compute Ukulele tabs from chords: Share the chords with Jérémie and he will show you where to place your fingers ! \nWith IRL ukulele songs.",
                "VideoUrl": "http://videos.ncrafts.io/video/275530137",
                "VideoId": "275530137",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Languages",
                    "Practices",
                    "Functional"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc17-jch01",
                "Event": "newcrafts2017",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-19T13:00:00Z",
                "Room": "Liskov",
                "Title": "Lambdas: the Architectural way to Serverless",
                "Abstract": "The Serverless buzzword could be a fad, but Lambdas are bringing together solid architectural patterns you should know to build reliable systems.\n\nMoving to the cloud or not, we'll discuss Hexagonal architecture, Functional Programming, Micro Services and Event Driven Architecture to see how they fit together, and how they really make sense past the craze.",
                "VideoUrl": "http://videos.ncrafts.io/video/223267154",
                "VideoId": "223267154",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Functional",
                    "DDD",
                    "Serverless"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-jch01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T14:00:00",
                "Room": "Lovelace",
                "Title": "Applicatives IRL",
                "Abstract": "Monads are all the rage in FP land, but Applicatives, despite lack of love can help and save In Real Life situation. We'll learn to recognize them and use them, then with three examples will see how far Applicatives can be applied to your domain or technical code for the better.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "brassy",
        "FirstName": "Emanuela",
        "LastName": " Damiani",
        "Company": null,
        "Bio": "Emanuela works every day for the best browser experience at Firefox. She fell in love with the Web at a young age, and since then she has never stopped studying and learning it.",
        "ShortBio": "\\#DesignOps and \\#opendesign advocate",
        "Photo": "/assets/img/speakers/EmanuelaDamiani.jpg",
        "Site": "https://design.firefox.com/photon/welcome.html",
        "Twitter": "brassy",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-eda01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T15:00:00",
            "Room": "Lovelace",
            "Title": "Community based design",
            "Abstract": "A design process can be extraordinarily structured, or entirely missing. Either way, it often requires a remarkable number of conversations with all the stakeholders involves, including people from different departments and the users. But, what does happen when we add the unpredictable power of a community? In this talk, I’ll share my thoughts, fears and views on working for an open-source product.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "helenleigh",
        "FirstName": "Helen",
        "LastName": " Leigh",
        "Company": null,
        "Bio": "Helen Leigh is an author, inventor and electronics nerd with a focus on creative use of new technologies. Her recent book, The Crafty Kid’s Guide to DIY Electronics, was called “impossible not to love” by BBC Click and she has written playful technology education materials for National Geographic, Intel Education and the Royal Court of Oman. Alongside her writing, Helen makes creative technology products with a focus on education, including her latest collaboration with Imogen Heap, MI.MU, and Pimoroni, a gesture-controlled musical instrument glove that you can sew, wire, code, and play. Helen also lectures on electronics, physical computing, and music technology at Ravensbourne University and Tileyard Studios in London. Helen lives between Berlin and Chicago.",
        "ShortBio": "Maker, writer, lecturer, musician & nerd. Wrote The Crafty Kid’s Guide to DIY Electronics. Made the MINI·MU glove for [@imogenheap](https://twitter.com/imogenheap) & [@mimu_gloves](https://twitter.com/mimu_gloves).",
        "Photo": "/assets/img/speakers/HelenLeigh.jpg",
        "Site": "",
        "Twitter": "helenleigh",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-hle01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T16:00:00",
            "Room": "Lovelace",
            "Title": "Music tech hacking",
            "Abstract": "Humans have always experimented with sound and instrument making. Radical innovations using state of the art technology in the 1500s brought us the ancestor of the modern violin and even classical artists such as Stravinsky and Debussy were considered avant guard in their time. This talk will explore some of the most radical and exciting music technologies and sound hacking artists of the modern age.\n\nHelen Leigh is a creative technologist specialising in sound who works in Berlin and London, home to some of the most interesting music technologies and sound artists in the world. She will take you on a whistle stop tour of several strange and beautiful creations made by herself and members of the communities she belongs to, including gesture controlled musical instruments, a pipe organ made of Furbies and live coding rave culture. You’ll be able to hear what a cello sounds like after you’ve bounced the sound off the moon and watch a live performance of a pair of singing capacitive touch circuit sculptures.\n\nWhich technologies will change our musical landscapes in the future and which will become forgotten curiosities?",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "ziobrando",
        "FirstName": "Alberto",
        "LastName": " Brandolini",
        "Company": "Avanscoperta",
        "Bio": "Alberto Brandolini can model every business domain, given enough space, a paper roll and an unlimited source of colored sticky notes (with a larger stock of orange ones). His contributions to the community include EventStorming, Model Storming and, more notably, the Bullshit Asymmetry Principle. Alberto Brandolini is an IT Professional that gets bored doing things in the same old way. This led him into unexplored areas of Domain-Driven Design, Lean and Agile Software Development, learning and change management, where he likes to bring apparent chaotic fuzziness and a comic-like visual touch. An active consultant in software product development, he also run his company Avanscoperta. He’s frequently invited as a speaker in many conferences around the world.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/AlbertoBrandolini.jpg",
        "Site": "http://ziobrando.blogspot.com/",
        "Twitter": "ziobrando",
        "Github": "ziobrando",
        "Updated": true,
        "Sessions": [{
                "Id": "nc17-abr01",
                "Event": "newcrafts2017",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-19T17:00:00Z",
                "Room": "Keynote",
                "Title": "Optimized for What?",
                "Abstract": "Since the early days, software development has evolved a lot. Writing code used to be a long tiring activity, but now is no longer the bottleneck. However, if we see software development with a different perspective, we'll realize that there are vast opportunities for improvement, by switching to a more appropriate metaphor.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Craftsmanship",
                    "Practices",
                    "Agile"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-abr01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T17:15:00",
                "Room": "Lovelace",
                "Title": "KEYNOTE : The gordian knot → Hatching Software Development Ecosystems",
                "Abstract": "Some companies are going \"full DevOps\" and apparently releasing at the speed of light. Other companies are still struggling with estimations and slowly thinking about going microservices. Other are happy with their monolith, but struggling with recruiting.\n\nWe’re all developers, but we’re not doing the same job. The line connecting a problem to its solution is relatively straight in some organizations and incredibly convoluted in some hours.\n\nProcesses, Software architectures and Organization are not separate concerns, neither are orthogonal. Pretending to fix one thing without touching others is a losing battle.\n\nWe’re part of the problem. Our software is part of the problem. We can be part of the solution too.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "clementd",
        "FirstName": "Clément",
        "LastName": " Delafargue",
        "Company": "Clever Cloud",
        "Bio": "I'm a functional programmer, working primarily with Haskell at Fretlink.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/ClementDelafargue.jpg",
        "Site": "",
        "Twitter": "clementd",
        "Github": "divarvel",
        "Updated": true,
        "Sessions": [{
                "Id": "nc16-cde01",
                "Event": "newcrafts2016",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2016-05-12T13:45:00Z",
                "Room": "Gallia",
                "Title": "Beyond flux: going full cycle with functional reactive programming",
                "Abstract": "React and flux have shown us how to design UI in a modular fashion. One of the core ideas, is that data should always flow in one direction. With this concept, it's easier to build applications from independent modules. I'll show what react core concepts are and how they allow developers to manage complexity in big applications.\n            \nI'll then show how to go one step further with Functional Reactive Programming and RxJS. After explaining what FRP is (and isn't), I'll show how FRP principles can unify a lot of different things in flux architectures. Cycle.js allows us to have a single direction rendering loop by representing both DOM and user interaction with observables, which come with an extensive API.\n            FRP has been used for some time in UI frameworks (eg Reactive Cocoa for MacOS). Now its time has come in the javascript world, thanks to libraries like RxJS and to the ideas pushed forward by React and Flux.\n            \nAt the end of the talk, you'll have a basic understanding of how Flux works, you'll know how RxJS works and how you can use FRP to design your client side applications.",
                "VideoUrl": "http://videos.ncrafts.io/video/170129852",
                "VideoId": "170129852",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Functional",
                    "Design",
                    "Web"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-cde01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T10:30:00",
                "Room": "Hopper",
                "Title": "Application design with a stack of monads",
                "Abstract": "Functional Programming is often seen as a nice tool for small-scale concerns, not as a tool for application design. \"Functional in the small, OO in the large\" is often heard and sums up this idea quite well. However, functional programming comes with interesting tools aimed at solving these boring (or deemed boring) concerns: dependency inversion, observability). Aspect-Oriented-Programming is often used for this in the OO word. \n\nA functional solution, called a _monad stack_, allows to combine all this cross-cutting concerns and behaviours with no magic (or not too much). \n\nIn this conference, we'll see what _monad transformers_ are, how they work, and how to use them to structure a web application, with examples in scala and haskell.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "gwendiagram",
        "FirstName": "Gwen",
        "LastName": " Diagram",
        "Company": null,
        "Bio": "Gwen Diagram is a technology professional from Leeds who specialises in testing.  She is an avid automation evangelist with a focus on testing complemented by repeatable build processes with monitoring. She has had varied roles throughout her career including Scrum Master at a Start Up and DevOps kid at a large Financial Services organisation. She is Lead Tester at Monzo Bank.\n\nAs a strong believer in making the tech industry as open and punk as possible, she co-organises a twice yearly free day long testing conference called the Leeds Testing Atelier.  She speaks regularly at local meet-up groups, Agile Yorkshire and Leeds DevOps, duels with creative types at events like the Tech Off, speaks internationally at conferences such as Nordic Testing Days in Tallinn and was the closing keynote at Agile on the Beach in Falmouth, UK in 2018.\n\nOutside of work, you will usually find her hanging around a Natural History Museum somewhere in the world marvelling at how incredibly excellent dinosaurs are, feeding pigeons or ducks or shouting as the singer in a band.",
        "ShortBio": "Software Tester / Scrum Master / DevOps kid. Monzonaut 🚀. One of the organisers of the Leeds Testing Atelier. Lover of dinosaurs, living and dead.",
        "Photo": "/assets/img/speakers/GwenDiagram.jpg",
        "Site": "",
        "Twitter": "gwendiagram",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-gdi01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T11:30:00",
            "Room": "Hopper",
            "Title": "Security by Stealth",
            "Abstract": "Security isn't very fun for development teams to think about. It's complex and something that isn't brought to mind when considering requirements. Too often, it neglected by teams and left to the end for penetration testers to consider. But, it doesn't have to be. Security can be considered early in the development cycle. How can we encourage this behaviour? How can you get development teams interested?\n\nSecurity is an important skill to possess while delivering quality software. The cost of not having security skills within teams is now more obvious than ever. Security should be in the forefront of development teams minds. Even with these risks, data leaks and denial of service attacks are in the headlines often. How do we stop our companies being another statistic?\n\nLearning should not be compulsory. Especially if you want something to become part of the culture. Beginning with a simple workshop to expanding to a security guild, people were eager to be involved. This lead to further workshops which included the basics of threat modelling using STRIDE to the complexity of automated checks. Security at Sky became not only fun but cool. Security was no longer a rarely thought about requirement but a fun, oft thought about need.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "SavarinAnna",
        "FirstName": "Anna",
        "LastName": " Savarin",
        "Company": "Criteo",
        "Bio": "Engineer, recent XP convert, flying trapeze enthusiast. Currently part of a distributed mob team, building a large application on top of a private blockchain.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/AnnaSavarin.jpg",
        "Site": "",
        "Twitter": "SavarinAnna",
        "Github": "AnnaSavarin",
        "Updated": true,
        "Sessions": [{
                "Id": "nc17-asa01",
                "Event": "newcrafts2017",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-18T14:00:00Z",
                "Room": "Lovelace",
                "Title": "Accidental Bad Guys: Systemic Problems at Scale",
                "Abstract": "Do you know what happens when you add hundreds of nodes to your monster Hadoop cluster? Neither did I, until I embarked on my DevOps journey. Whether related to the NameNode, an external provider, or an internal dependency, the issues that arise can be surprisingly disruptive.\n\nLet's take a look at some (shameful) operational incidents, in a massively distributed environment, with one common theme: the attacker is not who you think. Local mirrors, network and application throttling, more pessimistic network configurations, avoiding cascading effects -- even paying attention! -- can prevent pissing off lots of people in your building and on the internet. Whether you are more Dev than Ops, and no matter the size of your operation, you will find that scaling up linearly can bring exponential trouble.\n\nFind out why every character in this story got angry at some point, and what everyone learned in the end.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design/Architecture"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-asa01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T14:00:00",
                "Room": "Hopper",
                "Title": "Non-Euclidean Software Delivery",
                "Abstract": "After some project experience, you would think software development is about feature branches and pull requests, sprints, deadlines and tardy code, brittleness and tech debt, JIRA and PMs, heroic teammates, and stress. It has to be that way as these are all byproducts of some hidden axioms.\n\nWelcome to my new world where axioms are reversed and parallel lines cross! Ever since I joined my mob team and started practicing Extreme Programming, I have been slowly tossing out of the window everything I know so far about software delivery.  Fresh, newcomer perspective is short-lived and high-value, and I would like to share my amazement at this non-Euclidean way of delivering software, before it becomes the new norm for me.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": null
    },
    {
        "Id": "rinkkasatiainen",
        "FirstName": "Aki",
        "LastName": " Salmi",
        "Company": null,
        "Bio": "Aki Salmi is a programmer who's always trying to learn more of the craft. His favorite stategies for fulfilling that need of learning are trying things at production code and to attending to conferences. Being one that travels to numerous conferences on software craft, he is quite well known in Europe.\nAlso, Aki organises events himself, namely quite possibly the coolest conference of the year - CodeFreeze.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/AkiSalmi.jpg",
        "Site": "",
        "Twitter": "rinkkasatiainen",
        "Github": "rinkkasatiainen",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-asa01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T15:00:00",
            "Room": "Hopper",
            "Title": "Railroad-Driven Programming",
            "Abstract": "Tired of if-statements cluttering up your code?\nIn this talk, you will be guided to railroad tracks - web app designed and implemented functionally using heavily Either Monads. Everything is either a Success or Error, or rather a Future of Success or Errors. \nDuring the talk, few monads are discussed, like Maybe and Either, using examples from SanctuaryJS (which is used in the app). Also some good practices that makes the domain code easy to understand.\nThe talk will be based on real code that runs in production.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "matthiasnoback",
        "FirstName": "Matthias",
        "LastName": " Noback",
        "Company": "Ibuildings",
        "Bio": "Matthias Noback has 15 years of experience in web application development. He is the author of [Principles of Package Design](https://leanpub.com/principles-of-package-design/), [Microservices for everyone](https://leanpub.com/microservices-for-everyone/) and [Style guide for Object Design](https://leanpub.com/object-design/). While always striving for better programming practices in general, he's taken a special interest in application architecture, Domain-Driven Design, testing, microservices and application integration patterns.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/MatthiasNoback.jpg",
        "Site": "https://matthiasnoback.nl/",
        "Twitter": "matthiasnoback",
        "Github": "",
        "Updated": true,
        "Sessions": [{
                "Id": "nc16-mno01",
                "Event": "newcrafts2016",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2016-05-13T09:45:00Z",
                "Room": "Gallia",
                "Title": "Beyond patterns & principles - writing good code",
                "Abstract": "Of course, you should read all you can about SOLID, Design patterns, Patterns of Enterprise Application Architecture, etc. Once you have a basic understanding of these topics you still have to write that code though, and write it well too! What is good code? Are there some guidelines, or rules of thumb, which you can follow while making your everyday coding decisions?\n\nIn this talk I'll cover many of these coding guidelines, which aren't usually covered by patterns or principles books. They should help you write better code and give you a richer vocabulary for reviewing other people's code. Some of the subjects that we'll discuss are: state, mutability, CQS, one-method objects, domain-first, API-driven, functional programming influences, object boundaries, (de)serialization, and many more!",
                "VideoUrl": "http://videos.ncrafts.io/video/170132598",
                "VideoId": "170132598",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design",
                    "Architecture",
                    "Code"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc17-mno01",
                "Event": "newcrafts2017",
                "Format": "lab",
                "DurationMinutes": 105,
                "Order": 0,
                "StartTime": "2017-05-18T08:45:00Z",
                "Room": "Kare",
                "Title": "Living documentation",
                "Abstract": "A mini-workshop on maintaining a Living documentation for your software projects. The workshop is based on the book Living documentation by Cyrille Martraire.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design",
                    "Architecture",
                    "Code"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc19-mno01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T16:00:00",
                "Room": "Hopper",
                "Title": "Brutal refactoring, lying code, the Churn, and other emotional stories from Legacy Land",
                "Abstract": "Working effectively with legacy code isn’t all about creating test harnesses before refactoring algorithms. The \"safety first\" strategy doesn’t always apply. Not if the code you’re looking at is LYING IN YOUR FACE anyway.\n\nIn this talk I’ll show you what brutal refactoring is. I’ll show you the red glowy eyes of the Churn. And I’ll hold up some big warning signs that should prevent you from producing legacy code today.\n\nTable flips allowed.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "nl"
        ]
    },
    {
        "Id": "XDetant",
        "FirstName": "Xavier",
        "LastName": " Detant",
        "Company": null,
        "Bio": "Co-organizer of the Paris software craftsmanship community and the SoCraTes France unconference, knowledge sharing is at the core of my mindset.\nCraftsman by day, fighting misunderstanding, frustration and anger with empathy and communication by night.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/XavierDetant.jpg",
        "Site": "",
        "Twitter": "XDetant",
        "Github": "NULL",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-xde01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T10:30:00",
            "Room": "Liskov",
            "Title": "Test && commit || revert",
            "Abstract": "[Kent Beck wrote an article](https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864) about a technique invented by Oddmund Str√∏mmer last september. TCR is an alternative to TDD that enforce even more extreme rules than TDD. The goal of this talk is to present the principles, pros and cons according to my experience with TCR.\nEvery point will be illustrated with examples. Finally, we'll try to adapt TCR a bit in order to mitigate the identified cons.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "patkua",
        "FirstName": "Patrick",
        "LastName": " Kua",
        "Company": "ThoughtWorks",
        "Bio": "Patrick Kua is a keynote and frequent conference speaker, trainer and author of three books: [The Retrospective Handbook](http://thekua.io/retrobook), [Talking with Tech Leads](http://thekua.io/twtl) and most recently, [Building Evolutionary Architectures](http://thekua.io/evolarch). He is currently Chief Scientist and former CTO of the mobile bank N26 (Berlin, Germany) where he is building the engineering group that will change modern retail banking for people like you and me. Formerly a Principal Technical Consultant at ThoughtWorks for almost 14 years, he brings a balanced focus on people, organisations and technology to optimise the flow of software. You can find him blogging at [http://www.thekua.com/atwork](http://www.thekua.com/atwork) and on twitter as @patkua",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/PatrickKua.jpg",
        "Site": "https://www.thekua.com/atwork/",
        "Twitter": "patkua",
        "Github": "",
        "Updated": true,
        "Sessions": [{
                "Id": "nc17-pku01",
                "Event": "newcrafts2017",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-18T15:15:00Z",
                "Room": "Keynote",
                "Title": "The well-rounded architect",
                "Abstract": "Being a successful architect requires more than just a good understanding of architecture. Patrick Kua explores the breadth of skills and experience an architect should focus on and outlines the balance of traits that makes a well-rounded architect.Patrick examines the architect role from a number of perspectives -looking both inward and outward- to determine the different skill areas an architect requires to be successful. Patrick also shares some of the typical traps that an architect who focuses too much on a single aspect falls into and discusses their negative consequences to teams and organizations. Patrick concludes by offering a map for you to assess and plan your own development to learn and maintain a balanced set of skills and become a well-rounded architect.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Craftsmanship",
                    "Practices",
                    "Agile"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-pku01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T11:30:00",
                "Room": "Liskov",
                "Title": "Talking with Tech Leads",
                "Abstract": "As a software engineer, you will have learned that \"naming things\" will remain one of the most difficult tasks in our industry. This is even more confusing when it comes to roles and responsibilities for the Tech Lead role. After interviewing many people playing technical leadership roles, establishing a European-wide Tech Lead training program in his last company, and training 100+ Tech Leads around the world, Patrick will share his lessons learned about what exactly a Tech Lead is, and what it takes to make the role successful. If you currently have or would like to take on a leadership role for an engineering team, come to this session to hear some practical tips that will make you a more successful Tech Lead.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "saleandro",
        "FirstName": "Sabrina",
        "LastName": " Leandro",
        "Company": null,
        "Bio": "Sabrina is a technical leader with strong experience in product development process, systems design, and management.\n\nShe enjoys working with cross-functional teams, designing useful and delightful products, while focusing on code quality and good software design practices.\n\nSabrina is former VP of Tech at Songkick and most recently she has been working with companies to improve their tech and processes.",
        "ShortBio": "Technical leadership consultant",
        "Photo": "/assets/img/speakers/SabrinaLeandro.jpg",
        "Site": "http://saleandro.com/",
        "Twitter": "saleandro",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-sle01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T15:00:00",
            "Room": "Liskov",
            "Title": "How to rewrite, a bit at a time",
            "Abstract": "There’s nothing more frustrating than not being able to deliver new features because of unnecessarily complicated code. A fast deployment pipeline is of no use if the code itself is too hard and slow to change.\n\nYou may decide it’s time to throw it all away and start over… and what began full of optimism, drags on for months and years, adding even more complexity and various levels of legacy.\n\nIt doesn’t have to be this way! In this presentation, you’ll hear a first-hand experience of how to approach technical debt in an iterative way. This talk will teach you lessons on how to start, and most importantly, finish a big rewrite project.\n\nYou will learn how to approach the conversation with the \"business\", avoid the most common pitfalls when changing the architecture of a complex codebase, and ensure the rewrite brings value from the start till the very happy end.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "SteveSmithCD",
        "FirstName": "Steve",
        "LastName": " Smith",
        "Company": null,
        "Bio": "Steve Smith is a Continuous Delivery consultant at Continuous Delivery Consulting Ltd. Steve was an early adopter of Continuous Delivery in 2007, and has overseen large scale Continuous Delivery adoption programmes in private and public sector organisations. Steve is the author of the book [​Measuring Continuous Delivery](https://leanpub.com/measuringcontinuousdelivery), a co-author of [​A Children’s A to Z of Continuous Delivery​](https://leanpub.com/achildrensatozofcontinuousdelivery), and a co-author of [​​Build Quality In](https://leanpub.com/buildqualityin)​. Steve is a prominent voice in the worldwide Continuous Delivery community, and a regular conference speaker.",
        "ShortBio": "Continuous Delivery consultant at [continuousdeliveryconsulting.com](http://continuousdeliveryconsulting.com/)",
        "Photo": "/assets/img/speakers/SteveSmith.jpg",
        "Site": "https://www.continuousdeliveryconsulting.com/",
        "Twitter": "SteveSmithCD",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-ssm01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T16:00:00",
            "Room": "Liskov",
            "Title": "Continuous Delivery and the Theory of Constraints",
            "Abstract": "How should you actually implement Continuous Delivery?\n\nAdopting Continuous Delivery takes time. You have a long list of technology and organisational changes to consider. You have to work within the unique circumstances of your organisation. You’re constantly surrounded by strange problems, half-baked theories, off the shelf solutions that just don’t work, and people telling you they’ve worked here for 23 years and Amazon is nothing to worry about.\n\nHow do you identify and remove the major impediments in your build, testing, and operational activities? How do you avoid spending weeks, months, or years on far-reaching changes that ultimately have no impact on your time to market?\n\nThe Theory of Constraints is a management paradigm that describes how to improve throughput in a homogeneous workflow. It can be applied to Continuous Delivery in order to locate, prioritise, and reduceconstrained activities until a flow of release candidates to production is achieved.\n\nIn this talk, Steve Smith will explain how easy it is for a Continuous Delivery programme to be unsuccessful, how the Theory Of Constraints works, how to apply the Five Focussing Steps to Continuous Delivery, and how to home in on the constrained activities that are your keys to success. It includes tales of glorious failures and ignominious successes when adopting Continuous Delivery.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "w3ltraumpirat",
        "FirstName": "Tobias",
        "LastName": " Goeschel",
        "Company": null,
        "Bio": "After a moderately successful attempt at becoming a professional rock musician, Tobias started his career as a freelance web developer in 1997, and has since worked on hundreds of smaller and larger projects, from a few days to several years, in a variety of roles, contexts, and industries. He is a survivor of no less than three major technology hypes (domain specific languages, model-driven architecture... and Flash), and eventually decided to focus on topics with a less volatile lifespan - Lean, Agile, Software Crafting and DevOps.\nHaving found a home as a consultant, crafter and coach at codecentric, he strives to help customers to build and improve not only their product, but also how it is made.\nHe is a passionate advocate for collaborative work environments, knowledge sharing, and diversity, and a co-organizer of SoCraTes Germany (https://socrates-conference.de/).  \nTobias is a father of two and loves music, books, movies, and little dogs.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/TobiasGoeschel.jpg",
        "Site": "",
        "Twitter": "w3ltraumpirat",
        "Github": "weltraumpirat",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-tgo01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T10:30:00",
            "Room": "Kare",
            "Title": "Domain Prototyping, or Design is How it Works.",
            "Abstract": "When we design a system from scratch, especially complex distributed systems, with microservices and/or Big Data pipelines, we have to make a series of important tactical decisions regarding the structure and information flow within our domain. If we assume boundaries in the wrong place, or forget or omit important aspects of communication, we can end up with brittle services, performance issues, and needlessly coupled modules and components, which are painful to maintain and deploy.\nSome of those aspects are hard to discover upfront, and even with great experience, it's not unusual to get the first design at least partially wrong. \n\nOne way to minimize the consequences of those decisions, and to verify our initial assumptions, is to start implementation not with a full architecture in mind, but rather with the smallest possible footprint: A plain, but fully operational prototype of the domain model, which we can stress, observe and explore - and change easily, if we run into problems. This way, we can actually _see_ our design work, and gain valuable insights.\n\nUsing examples, I will demonstrate how combining Domain Driven Design with the practices, heuristics and principles of Software Crafting can highlight difficult or problematic choices, improve fundamental architecture decisions, and ultimately lead to better and more sustainable software systems, long before we get sidetracked by the additional complexity of host environments and deployment pipelines.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "malk_zameth",
        "FirstName": "Romeu",
        "LastName": " Moura",
        "Company": "Arolla",
        "Bio": "Endless conversation‚ —  with friends, compilers‚ — on art, Symmathesy, methods, absurdism, dialectic, paradigm jumps, serendipity.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/RomeuMoura.jpg",
        "Site": "",
        "Twitter": "malk_zameth",
        "Github": "malk",
        "Updated": true,
        "Sessions": [{
                "Id": "nc18-rmo01",
                "Event": "newcrafts2018",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2018-05-17T14:45:00Z",
                "Room": "turing",
                "Title": "Big corps as little panopticons. Agile coaches as colonial imperialists.",
                "Abstract": "Without any big conspiracy (nor any bad person on top) We have created dysfunctional corporate cultures where waste reins, sadness is rampant and the majority has abandoned hopes of changing.\n\nIt is a system where every participant is oppressed and also complicit in their oppression.\n\nThis talk aims to help you see the system and in seing it arm yourself to fight it.\nThis talk also aims to convince you that you can, in fact, make a difference.",
                "VideoUrl": "http://videos.ncrafts.io/video/275530213",
                "VideoId": "275530213",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Developer's life"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc17-rmo01",
                "Event": "newcrafts2017",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-19T12:00:00Z",
                "Room": "Liskov",
                "Title": "Reading code under the influence of one's emotions",
                "Abstract": "We talk a lot about writing \"beautiful\" code but never about reading the \"ugly\" one!\nYet we read more than we write and \"ugly\" is more frequent than \"beautiful\"!\nSuffer less! Arm yourself to improve your skill at reading code,\nto fight the tendency to needless despise your fellow Devs\nto make sense out of the ball of mud while under the influence of your emotions.",
                "VideoUrl": "http://videos.ncrafts.io/video/221102445",
                "VideoId": "221102445",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Practices"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc17-rmo02",
                "Event": "newcrafts2017",
                "Format": "Hands-on",
                "DurationMinutes": 120,
                "Order": 2,
                "StartTime": "2017-05-18T08:45:00Z",
                "Room": "Goldberg",
                "Title": "Kebab kata: Fight the system making your code sad!",
                "Abstract": "Try to create a code you will not consider \"legacy\".\n\nI'll play the role of your client and use around 20 techniques to make you fail.\n\nYou will fail.\n\nWe'll then discuss what techniques I have used, how they happen in real life, how to fight them in your project.\n\nAll languages welcome. Bring your own laptop with your environment. We'll split into small teams.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Practices"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc16-rmo01",
                "Event": "newcrafts2016",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2016-05-12T12:45:00Z",
                "Room": "Gallia",
                "Title": "Property-based testing (& domain invariants) for the rest of us",
                "Abstract": "Use Property-based tests, on your legacy codebase, to reduce test-debt, create smaller and fewer tests that test more, are more readable and better document your problem.",
                "VideoUrl": "http://videos.ncrafts.io/video/170129851",
                "VideoId": "170129851",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design",
                    "Functional",
                    "Code"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc19-rmo01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-16T11:30:00",
                "Room": "Kare",
                "Title": "Bourdieu's Social theory and our work in tech",
                "Abstract": "We know psychological safety is necessary for any working team to work But how achievable is it? I posit that due to our current blind spots our visions on that are naïve. Let's dig together on why! tis time for some Sociological Theory, let's Vulgarise Bourdieu! Buckle up for a keynote on\n\nSymbolic Violence.\nSocial/Corporeal Hexis.\nCultural Capital.\nInteractions of those 3 and \"Agile\" Methods.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr",
            "pt"
        ]
    },
    {
        "Id": "elefevre",
        "FirstName": "Eric",
        "LastName": " Lefevre-Ardant",
        "Company": "leboncoin",
        "Bio": "Eric has been a software professional since 1998, mostly in the Java world, with a good dash of Agile. He likes coding with other developers who value ease and joy at work.\nIn the past, he has been involved with startups, as well as service companies. He is now in the backend team at leboncoin where he codes in many languages, except Java.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/EricLefevre-Ardant.jpg",
        "Site": "",
        "Twitter": "elefevre",
        "Github": "NULL",
        "Updated": true,
        "Sessions": [{
                "Id": "nc17-ele01",
                "Event": "newcrafts2017",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-19T09:45:00Z",
                "Room": "Liskov",
                "Title": "Introduction to Philosophy of Artificial Intelligence",
                "Abstract": "Can machines think? How would we know anyway? What does intelligent means, for a machine ?\n\nIdeas and thought experiments were offered by philosophers to better understand whether we can achieve general artificial intelligence. In this talk, we will explore those ideas, focusing particularly on the Turing Test and the Chinese Room.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Tools"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-ele01",
                "Event": "newcrafts-paris-2019",
                "Format": "Lightning Talk",
                "DurationMinutes": 20,
                "Order": 0,
                "StartTime": "2019-05-16T14:00:00",
                "Room": "Kare",
                "Title": "Plankalkül: a high-level language from the 1940s",
                "Abstract": "At the dawn of the computer age, only Assembly languages could be used to program computers without going through the recabling process. Modern programming languages only appeared in the 1950s.\n\nStill, in the 1940s, a German inventor designed Plankalkül. Its influence has been limited, but its ideads were incredibly advanced for the times.\n\nTogether, let's rediscover the first high-level programming language in history.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": null
    },
    {
        "Id": "estelandry",
        "FirstName": "Estelle",
        "LastName": " Landry",
        "Company": null,
        "Bio": "I’m passionate about my job as a Product Owner, about UX (User eXperience) and GameStorming. I like to participate in a product development by making the link between users and developers.\n\nTech conference speaker, Duchess France member, SunnyTech and Meetup UX Flupa Montpellier organizer. I continue to improve and talk about new methods or IT Technologies.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/EstelleLandry.jpg",
        "Site": "",
        "Twitter": "estelandry",
        "Github": "NULL",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-ela01",
            "Event": "newcrafts-paris-2019",
            "Format": "Lightning Talk",
            "DurationMinutes": 20,
            "Order": 0,
            "StartTime": "2019-05-16T14:25:00",
            "Room": "Kare",
            "Title": "How to lose your feature overload ?",
            "Abstract": "The application life cycle is a nebulous and dangerous road. \nThe complexity increases exponentially . One of the developer biggest challenges is to be able to control this complexity while adding new features.\n\nSeveral solutions exist: code rewriting or mastery of technical debt. \nThe only true solution: Remove features!\nThis talk will explain how to lose your application featural overload by understanding the difference between the essential complexity and the accidental complexity, but also by giving you keys to carry out these changes in your project teams.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "jpalies",
        "FirstName": "Jean",
        "LastName": " Paliès",
        "Company": "Palies Consulting",
        "Bio": "Jean Paliès has been programming for 15 years. Over the past two years, he is doing so as a freelance, lucky enough to pair and mob program remotely everyday. He also likes to help children figure out how to make computers do things for them",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/JeanPalies.jpg",
        "Site": "",
        "Twitter": "jpalies",
        "Github": "JeanPalies",
        "Updated": true,
        "Sessions": [{
                "Id": "nc17-cbo01",
                "Event": "newcrafts2017",
                "Format": "Hands-on",
                "DurationMinutes": 120,
                "Order": 1,
                "StartTime": "2017-05-18T13:00:00Z",
                "Room": "Goldberg",
                "Title": "Code like a child",
                "Abstract": "Do you know visual programming?\n\nScratch, Blockly, MBlock are some visual programming languages we use to teach kids how to code.\n\nKids can use them, so can adults!\n\nIoT, REST calls, functionnal testing... what can we do with these languages? How are they built?\n\nAfter an introduction to several visual programming tools, we will focus on Blockly and look under its hood. We will create our own blocks, and then build a visual DSL to generate functionnal tests, that non \"coders\" can code.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Languages"
                ],
                "Cospeakers": [{
                    "Name": "Cécilia Bossard",
                    "Link": "/speaker/ceciliaBossard",
                    "Id": null,
                    "Photo": null
                }]
            },
            {
                "Id": "nc19-jpa01",
                "Event": "newcrafts-paris-2019",
                "Format": "Lightning Talk",
                "DurationMinutes": 20,
                "Order": 0,
                "StartTime": "2019-05-16T15:00:00",
                "Room": "Kare",
                "Title": "How video games taught me event sourcing",
                "Abstract": "In the early 2000s, I got puzzled by the small size of replay files for video games. I then dug into them and found some food for thought!",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": null
    },
    {
        "Id": "dorrabartaguiz",
        "FirstName": "Dorra",
        "LastName": " Bartaguiz",
        "Company": null,
        "Bio": ".net developer, coach and teacher",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/DorraBartaguiz.jpg",
        "Site": "",
        "Twitter": "dorrabartaguiz",
        "Github": "iAmDorra",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-dba01",
            "Event": "newcrafts-paris-2019",
            "Format": "Lightning Talk",
            "DurationMinutes": 20,
            "Order": 0,
            "StartTime": "2019-05-16T15:25:00",
            "Room": "Kare",
            "Title": "Slim Down Diet & TDD",
            "Abstract": "You'd like to get into TDD before next summer, but you're afraid you'll never make it on time? Don't worry, you'll find out how to succeed thanks to the 5 exclusive rules of slim down diets, such as \"reduce the size of the portions\", or \"mind the calories\" among other tips to overcome the obstacles and the friction. This talk will hand you the keys to start well and get on top of new TDD habits!",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "ddoomen",
        "FirstName": "Dennis",
        "LastName": " Doomen",
        "Company": null,
        "Bio": "Dennis is a veteran architect in the .NET space with a special interest in Domain Driven Design, CQRS, Event Sourcing and everything agile. He specializes in designing enterprise solutions based on the .NET technologies as well as providing coaching on all aspects of designing, building and maintaining enterprise systems. He is the author of www.fluentassertions.com, an assertion framework for fluently asserting the outcome of unit tests and he has publishing coding guidelines for C# on www.csharpcodingguidelines.com since 2001. He also maintains a blog on his everlasting quest for better solutions at www.continuousimprover.com. You can reach him on twitter through @ddoomen.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/DennisDoomen.jpg",
        "Site": "",
        "Twitter": "ddoomen",
        "Github": "https://api.github.com/users/dennisdoomen",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-ddo01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-16T16:00:00",
            "Room": "Kare",
            "Title": "Event Sourcing Done Right - Experiences from the Trenches",
            "Abstract": "Over the years I've spoken many times about what Event Sourcing is and shared many of the good, the bad and the ugly parts of it in blog posts and various talks. However, I've never talked about how to actually build a system based on this architecture style. I keep getting the same questions over and over again. Like when to apply Event Sourcing and at what architectural level. How to deal with transactional boundaries within and outside the domain. How to build projections that are autonomous, reliable and self-supporting. How to deal with upgrades and blue-green deployments. But also on how to handle bugs, design mistakes and crashing projections. Having made a lot of these mistakes myself over these years, it's time to share my current thoughts and opinions about this. Since the .NET space has a pretty rich set of open-source projections to support this, the examples and code will be .NET. But the concepts are universal, so don't let that scare you off.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "selketjah",
        "FirstName": "Gien",
        "LastName": " Verschatse",
        "Company": "Green Island",
        "Bio": "Gien is a software developer with 9 years of experience, mainly in a .NET environment, who likes to start her day with coffee. She is a strong believer of continuously learning by deliberate practice and knowledge sharing, which is why she takes part in the organization of two Belgian communities. She is a member of the F# Foundation Board, where she is responsible for running the Mentorship Program and she helps out with the SoCraTes BE unconference and Open FSharp. When she is not busy with all of the above, you will find her on the sofa, reading a book (yes, with coffee).",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/GienVerschatse.jpg",
        "Site": "http://www.selketjah.com/",
        "Twitter": "selketjah",
        "Github": "selketjah",
        "Updated": true,
        "Sessions": [{
                "Id": "nc17-gve01",
                "Event": "newcrafts2017",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-19T12:00:00Z",
                "Room": "Hopper",
                "Title": "Playing nice together: how to use F# in a brownfield project",
                "Abstract": "Like many companies, our main code base is a C# monolith. Although there is a lot of domain knowledge captured in it, using C# wasn't always the best choice to solve our domain problems. When we discovered F#, we realised that it was a better fit for some of the features we were currently implementing in C#. However, rewriting everything at once in F# would be ineffective. The manual says C# and F# play nice together. So we tried that out, pushing it as far as we could.\n\nIn this talk I will show you how we used F# in our existing C# monolith. I will talk about the positive and negative effects of our decisions, what I would do differently in the future and whether or not C# and F# do indeed play nice together.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Languages"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-gve01",
                "Event": "newcrafts-paris-2019",
                "Format": "Hands-on",
                "DurationMinutes": 105,
                "Order": 0,
                "StartTime": "2019-05-16T10:15:00",
                "Room": "Goldberg",
                "Title": "Devils, Wizards and Decision Making Heuristics: Magic 8 Balls to the Rescue",
                "Abstract": "Coffee or tea? One sugar or two? Should we use Event Sourcing or does CRUD seem good to you?\n\nOur brains are designed for making quick decisions, but quick does not always mean good… We make thousands of decisions each day but never stop to wonder: how did we come to this conclusion? Were there more choices than we realised? Did we focus on the right thing? Did we pick the right option? Are there other methods we can use to reach a better outcome?\nIf we improved our decision making by just 1%, overall we would achieve a massive improvement in every area of our lives, from happiness with our family to success at work. Everybody should learn decision making heuristics, yet nobody does. Let’s fix that.\n\nWe’re going to take a close look at a variety of key decision-making heuristics including \"problem restatement\", \"devil’s advocate\", and \"the wizard\". Through provocative exercises, we’re going to uncover the heuristics we currently use and we’re going to teach ourselves when to apply certain decision making heuristics to improve our chances of getting the results we want.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": null
    },
    {
        "Id": "huizendveld",
        "FirstName": "Marijn",
        "LastName": " Huizendveld",
        "Company": null,
        "Bio": "Marijn teaches people of different backgrounds the skill of doing the things that matter in environments that are critical to performance.\n\nOften his work involves organizations, software and customers. He brings these worlds together while teaching you and your colleagues how to do so.\n\nJudge him on added value, it's the only metric that matters. You may call him a consultant, coach, trainer and entrepreneur, because that's what he is.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/MarijnHuizendveld.jpg",
        "Site": "",
        "Twitter": "huizendveld",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-mhu01",
            "Event": "newcrafts-paris-2019",
            "Format": "Hands-on",
            "DurationMinutes": 105,
            "Order": 0,
            "StartTime": "2019-05-16T13:45:00",
            "Room": "Goldberg",
            "Title": "Iterating on domain models",
            "Abstract": "The first model a team comes up with often leads them down a particular path. That isn't much of a problem if the first model is any good. But often our first ideas aren't our best. How can you prevent bias towards your initial approach? What could you do to break free from the boundaries you first imagined?\n\nIn this hands-on you'll be working on a single problem but you'll be forced to re-imagine it multiple times with different constraints. In each round you'll be limited in such a way that you'll have to get creative and come up with vastly different models for the same problem space. At the end you'll see what the power is of an enabling constraint. The Monday after the conference you'll know that with a little digging and thinking you can come up with entirely different models for about any problem space.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "johan_alps",
        "FirstName": "Johan",
        "LastName": " Martinsson",
        "Company": "Indep",
        "Bio": "Johan Martinsson is a freelance developer and craftsman that is passionate, amongst other things, about design in code.\nHe has spent many years helping teams adopt XP-practices, in particular TDD and advanced coding. \nOne of Johan's primary skills is the ability to contaminate almost anyone with at least a few craftsman practices.\n\nJohan favorite way of making his point in conferences is by showing code. \n\nJohan organized the first code retreat in France, organized the first ever Legacy Code Retreat with JB Rainsberger.\nSince 2009 he co-organizes the Grenoble coding dojo. In 2016 it was at its 130th session! He also co-organizes France's biggest agile event: Agile Grenoble.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/JohanMartinsson.jpg",
        "Site": "",
        "Twitter": "johan_alps",
        "Github": "https://api.github.com/users/martinsson",
        "Updated": true,
        "Sessions": [{
                "Id": "nc18-jma02",
                "Event": "newcrafts2018",
                "Format": "talk",
                "DurationMinutes": 120,
                "Order": 1,
                "StartTime": "2018-05-18T10:45:00Z",
                "Room": "dijkstra",
                "Title": "Bug Free, by Design",
                "Abstract": "Get rid of whole families of bugs for good with 21 tricks to reduce the space available for bugs.  \n\nBugs are not a fatality, they appear whenever the design allows for it. Learn how to fix the root-causes and how to give an intrinsic quality to your code.\n\nYou'll look at static and dynamic typing in a different way. Learn about NoPrimitives, coupling & cohesion, if-less. We'll talk about the feedback-funnel and how it all scales from micro design to micro-services and to macro-design.\n\nLoads of concrete examples and some live coding",
                "VideoUrl": "http://videos.ncrafts.io/video/275530228",
                "VideoId": "275530228",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design",
                    "Architecture"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc18-jma01",
                "Event": "newcrafts2018",
                "Format": "hands-on",
                "DurationMinutes": 120,
                "Order": 1,
                "StartTime": "2018-05-18T14:45:00Z",
                "Room": "engelbart",
                "Title": "BugsZero Kata",
                "Abstract": "Bugs are optional, they get their way into our code much thanks the design choices we do or quite often fail to do.\n\nYou'll practice reading code, looking for parts where it is likely that a developer would create a bug if he extended the code. Whenever you've found such a weakness in the design your challenge is to strengthen the design in order to make that kind of bug very unlikely, or even impossible!\n\nYou'll practice the procedure of \n\n1. Identify a weakness in the design\n2. State what the potential bug is before explaining your solution. This is important, simply saying another solution is better avoids thinking of why it is actually better.\n3. Explain or refactor the code to show the new design.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design",
                    "Architecture"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc17-jma01",
                "Event": "newcrafts2017",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-18T09:30:00Z",
                "Room": "Hopper",
                "Title": "Usable software design",
                "Abstract": "Did you ever think of the user of your code? Not the one using the application,\nbut the developer that has to change the code after you. Does that person\nhave a good tool for the job, i.e. is the code usable?\n\nWhat can we learn from other domains where the power of user-centric design was discovered\ndecades ago and led to a win-win situation? Expert designers always repeat that\n\n> You're not your user!\n\nand\n\n> It's not the users fault, it's the designs fault.\n\nWhy? What does that mean in our world of code, architecture and team practices? You can\nexpect plenty of code illustrating general principles of design and ergonomics. You'll go\nhome with simple but powerful tools.",
                "VideoUrl": "http://videos.ncrafts.io/video/223267621",
                "VideoId": "223267621",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design/Architecture"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-jma01",
                "Event": "newcrafts-paris-2019",
                "Format": "Quick Hands-on",
                "DurationMinutes": 60,
                "Order": 0,
                "StartTime": "2019-05-16T16:00:00",
                "Room": "Goldberg",
                "Title": "Rescuing legacy - from legacy to TDD",
                "Abstract": "What's the main hurdle of doing TDD in our existing codebase? The difficulty of testing the untestable code of our legacy codebase so that it can be refactored into something where it is easy to add functionality using TDD.\n\nBut how is this done when I have no separation of layers, no architecture and I can't even mock the database? Well let's see the workflow through a live demonstration of how tests are put in place, how the code is refactored and then finally how tests are separated into different layers of the testing pyramid, and finally how easy it becomes to TDD the new feature!\n\nThis demonstrates not only the basic workflow of modern development with legacy code, but also how we can leverage preparatory refactoring to gain time even in the short term, thanks to testing. Additionally it illustrates how respecting the testing pyramid makes a developers life more pleasant.\n\nCode that makes no sense to unit test due to bad design is a common problem. This small example models this problem in realistic way due to its hard-coded integration with external dependencies that cannot be \"stubbed out\".",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": null
    },
    {
        "Id": "aprilwensel",
        "FirstName": "April",
        "LastName": " Wensel",
        "Company": null,
        "Bio": "April Wensel is the founder of Compassionate Coding, a socially conscious business that’s bringing emotional intelligence and ethics to the tech industry. She has spent the past decade in software engineering and technical leadership roles at various startups in Silicon Valley. She also teaches coding and mentors technologists around the world. Away from the keyboard, she enjoys picking fruit for the food bank, running ultramarathons, and baking vegan treats.",
        "ShortBio": "Founder of Compassionate Coding ([@compassioncode](https://twitter.com/compassioncode)) | Engineering Leader | Keynote Speaker | Ultra Runner | Ethical Vegan",
        "Photo": "/assets/img/speakers/AprilWensel.jpg",
        "Site": "https://compassionatecoding.com/",
        "Twitter": "aprilwensel",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-awe01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T09:15:00",
            "Room": "Lovelace",
            "Title": "KEYNOTE : Crafting Compassionate Code",
            "Abstract": "As developers, we might think we don't have to care about humans because we work on machines. However, nothing could be further from the truth. The only reason for us to build technology is to serve humans.\n\nTherefore, practicing compassion is essential for effective software development. Though many people think of compassion as something soft or ambiguous, you'll learn how compassion provides a practical framework for making rational decisions about our code with the goal of reducing suffering for ourselves, our collaborators, and our users.\n\nFrom understanding customer pain points all the way down to the level of choosing variable names, applying practical compassion can help us craft better code, improve people's lives, and ultimately find more satisfaction in our work!",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "ScottWlachin",
        "FirstName": "Scott",
        "LastName": " Wlaschin",
        "Company": null,
        "Bio": "Scott Wlaschin is a developer, architect and author. He is the author of the popular F# site fsharpforfunandprofit.com, and the book \"Domain Modeling Made Functional\", published by Pragmatic Bookshelf.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/ScottWlaschin.jpg",
        "Site": "",
        "Twitter": "ScottWlachin",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-swl01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T10:30:00",
            "Room": "Lovelace",
            "Title": "Four Languages from Forty Years Ago",
            "Abstract": "The 1970's were a golden age for new programming languages, but do they have any relevance to programming today? Can we still learn from them? In this talk, we'll look at four languages designed over forty years ago -- SQL, Prolog, ML, and Smalltalk -- and discuss their philosophy and approach to programming, which is very different from most popular languages today. We'll come away with some practical design principles that are still applicable to modern development.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "Abebab",
        "FirstName": "Abeba",
        "LastName": " Birhane",
        "Company": null,
        "Bio": "Abeba Birhane is a PhD candidate in Cognitive Science in University College Dublin. Her interdisciplinary research, which intersects between embodied cognition, digital technology studies, and critical data science, explores the dynamic and reciprocal relationships between individuals, society and digital technologies. She is a contributor to [Aeon Magazine](https://aeon.co/ideas/descartes-was-wrong-a-person-is-a-person-through-other-persons) and blogs regularly about cognition, AI, ethics and data science.",
        "ShortBio": "Cognitive science PhD student @UCDCompSci @ucddublin #DataEthics#Interdisciplinarity #EmbodiedCognitionEthiopian living in Dublin. Unfinalisable",
        "Photo": "/assets/img/speakers/AbebaBirhane.jpg",
        "Site": "https://abebabirhane.wordpress.com",
        "Twitter": "Abebab",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-abi01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T11:30:00",
            "Room": "Lovelace",
            "Title": "In defence of uncertainty",
            "Abstract": "Imagine a world where we are able to predict people’s behaviour with precision. A world, for example, where we can tell whether someone is going to a commit crime before they do. A lot of our problems would just disappear. The quest for absolute certainty has been at the top of Western science’s agenda. In a similar fashion, current technological developments tend to strive for generalizability and predictability. We value certainty, stability and uniformity. Whereas most of reality, instead of being orderly and stable is seething with change, disorder and process. People, far from being predictable and predetermined, are complex, social and dynamical beings that inherently exist in a web of relations. This talk discusses how absolute certainty is not only an unattainable goal so far as understanding people and the social world is concerned but also a dangerous state to aspire to.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "tomaspetricek",
        "FirstName": "Tomas",
        "LastName": " Petricek",
        "Company": "",
        "Bio": "Tomas is an academic, book author and open-source developer. He is a lecturer at University of Kent and is interested in making programming easier and data science more accessible. He also studies history of programming and writes about it from a philosophical perspective.\n\nTomas wrote a popular F# book \"Real - World Functional Programming\", helped to create a number of F# open-source libraries such as F# Data and created [coeffects](http://tomasp.net/coeffects), a theory of context aware programming languages. His most recent work includes [programming](http://thegamma.net/files/cj2015.pdf) [tools for data journalism](http://thegamma.net/files/cj2015.pdf), but also [three essays](http://tomasp.net/academic/papers/pivot/) that understand programming concepts such as types, monads and errors from philosophical perspective.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/TomasPetricek.jpg",
        "Site": "http://tomasp.net/",
        "Twitter": "tomaspetricek",
        "Github": "tpetricek",
        "Updated": true,
        "Sessions": [{
                "Id": "nc17-tpe01",
                "Event": "newcrafts2017",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2017-05-19T12:00:00Z",
                "Room": "Lovelace",
                "Title": "Learning to Live with Errors",
                "Abstract": "\"If trials of three or four simple cases have been made, and are found to agree with the results given by the engine, it is scarcely possible that there can be any error.\" (On the mathematical powers of the calculating engine, Charles Babbage, 1837)If Charles Babbage was right, you would just try to run your program on a few sample inputs and be sure that it will work correctly. Sadly, the world is not so simple. Since the invention of computers, we mostly eliminated hardware issues, but software errors remain. And programmers spent over 60 years finding different strategies for dealing with coding errors.Are software errors a curse that must be eliminated at all costs as advocates of strong typing claim? Are they a professional embarrassment that can be avoided through proper engineering? Should we see errors as an unavoidable part of any modern system and \"let it crash\" if an unhandled error occurs? Or could we even see errors as a source of creative inspiration?In this talk, I look at a number of strategies for dealing with errors that appeared throughout the history of programming. Understanding the origins of different approaches to errors is not just a fun historical exploration, but it sheds light on current issues in programming, including computer science education, hiring process and the never-ending programming language wars.",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Functional",
                    "Theory",
                    "Practices"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-tpe01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-17T14:00:00",
                "Room": "Lovelace",
                "Title": "The Search for Fundamental Software Engineering Principles",
                "Abstract": "Many fundamental ideas in theoretical computer science will still be true and important in 100 years. The halting problem will still be undecidable and appending to the end of a linked list will still have O(n) complexity. Finding similar fundamental ideas about software engineering is much harder. We will still have some development methodology, but it will likely differ from Waterfall or Agile. We will likely have some modelling tools, but they will likely not be based on UML, DDD or event sourcing. Are there any fundamental ideas about software engineering, or do we just keep re-inventing the wheel?\n\n\nI believe that fundamental principles of software engineering are of a very different kind than fundamental principles in theoretical computer science. Rather than alluding to mathematics, we need to critically reflect on the history. In this talk, we will look at past development methodologies, debates in the field and important milestones such as the 1968 NATO Conference on Software Engineering. I hope to convince you that critical reflection on those is a fundamental kind of knowledge about software engineering that will make you a better software engineer or craftsman and that will also be as relevant in 100 years as it is today.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "marick",
        "FirstName": "Brian",
        "LastName": " Marick",
        "Company": null,
        "Bio": "Writing books these days: [An Outsider's Guide to Statically Typed Functional Programming](https://leanpub.com/outsidefp) and [Lenses for the Mere Mortal: PureScript Edition](https://leanpub.com/lenses)",
        "ShortBio": "Programmer → tester → test consultant → agile consultant → programmer",
        "Photo": "/assets/img/speakers/BrianMarick.jpg",
        "Site": "http://www.exampler.com/",
        "Twitter": "marick",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-bma01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T15:00:00",
            "Room": "Lovelace",
            "Title": "Learning from how science and philosophy progress",
            "Abstract": "We know things about how to develop software, but we don’t know enough. We learn new things too slowly and too erratically. This talk will use the history of science and philosophy to make suggestions about how we can do better. These ideas aren’t abstract - \"somebody should do this thing someday\". If the talk is successful, we’ll start work on them soon, with the aim of improving the average practitioner's life in the near term.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "old_sound",
        "FirstName": "Alvaro",
        "LastName": " Videla",
        "Company": null,
        "Bio": "Alvaro Videla works as Developer Advocate for Microsoft Azure. A former RabbitMQ core-dev, before moving to Europe he used to work in Shanghai where he helped building one of Germany biggest dating websites. He co-authored the book \"RabbitMQ in Action\" for Manning Publishing. Some of his open source projects can be found here: http://github.com/videlalvaro. Apart from code related stuff he likes traveling with his wife, listening/playing music and reading books. You can find him on Twitter as @old_sound.",
        "ShortBio": "Member of the @azureadvocates Team. @DuraznoConf Organizer. Coauthor of RabbitMQ in Action. Ex  - Ex RabbitMQ Core Dev.",
        "Photo": "/assets/img/speakers/AlvaroVidela.jpg",
        "Site": "http://alvaro-videla.com/",
        "Twitter": "old_sound",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-avi01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T16:00:00",
            "Room": "Lovelace",
            "Title": "Are Programming Languages Languages?",
            "Abstract": "Since the early '50s we started talking about code as language. What does this metaphor implies? What are the similarities of programming languages with natural languages, and what are the differences between them? Do programming languages have the same cognitive influence in us, at the same level that natural languages are said to have?",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "ethicistforhire",
        "FirstName": "Nolen",
        "LastName": " Gertz",
        "Company": null,
        "Bio": "Nolen Gertz is Assistant Professor of Applied Philosophy at the University of Twente, and the Coordinator of the 4TU.Centre for Ethics and Technology's Taskforce on Risk, Safety, and Security. He is the author of The _Philosophy of War and Exile_ (Palgrave-Macmillan 2014), _Nihilism and Technology_ (Rowman & Littlefield International 2018), and of the forthcoming _Nihilism_ (MIT Press 2019).",
        "ShortBio": "Author of \"[Nihilism and Technology](https://amzn.to/2KMBsGs)\" and \"[The Philosophy of War and Exile](https://amzn.to/2GHpDz1)\"",
        "Photo": "/assets/img/speakers/NolenGertz.jpg",
        "Site": "https://ethicsandtechnology.eu/member/gertz-nolen/",
        "Twitter": "ethicistforhire",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-nge01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T17:15:00",
            "Room": "Lovelace",
            "Title": "KEYNOTE : Nihilism and Technology",
            "Abstract": "Rather than engage in endless debates about whether technologies are making us better or worse, Nolen Gertz investigates what we think \"better\" and \"worse\" mean, and what role this thinking has played in the creation of our technological world. Using Nietzsche's philosophy of nihilism, Gertz explores the ways in which our values mediate how we design and use technologies. Examining our technological practices—practices ranging from _Netflix and Chill_ to _Fitbit and Move_ to _Twitter and Rage_—reveals how nihilism and technologies have become intertwined, creating a world of techno-hypnosis, data-driven activity, pleasure economics, herd networking, and orgies of clicking.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "Heimeshoff",
        "FirstName": "Marco",
        "LastName": " Heimeshoff",
        "Company": null,
        "Bio": "Marco Heimeshoff is a trainer, speaker and software developer from germany. He organizes KanDDDinsky, a conference about Domain-Driven Design and the art of business software and founded the german DDD community in 2013. Between consulting companies around the globe and his day job in building health care software you'll find him speaking at conferences about DDD, socio-technical systems and first principles.\nMarco Heimeshoff won't leave any stone unturned once you lend him an ear and sticky notes. He believes that life long learning, focus on language and empathy are the three pillars of quality development. With over a decade of experience he is helping teams to change and learn in all things from code to culture and to master Domain-Driven Design, agile softwaredevelopment, functional programming and CQRS with event sourcing.",
        "ShortBio": "Co-Organiser of KanDDDinsky, EventStormer, dev, coach and speaker",
        "Photo": "/assets/img/speakers/MarcoHeimeshoff.jpg",
        "Site": "",
        "Twitter": "Heimeshoff",
        "Github": "heimeshoff/",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-mhe01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T10:30:00",
            "Room": "Hopper",
            "Title": "Domain Driven UI",
            "Abstract": "Domain Driven Design is a way of thinking about the needs of the customers first and putting an emphasis on their language and interactions.The outcome of this approach is mostly applied to the backend of applications, but a semantic domain model also benefits the UI.Unfortunately these semantics are often lost in translation when transferred to the frontend. I will show you a functional approach that allows you to actually reuse your domain types by combining CQRS/ Event - Sourcing on the backend and the Elm architecture on the frontend with an overall messaging architecture.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "EvelynvanKelle",
        "FirstName": "Eveyln",
        "LastName": " van Kelle",
        "Company": null,
        "Bio": "Evelyn van Kelle focuses on the interplay between technical issues and social factors. During her MSc study at Tilburg University, Evelyn was delighted to discover that the world of IT becomes exponentially stronger with sound communication. Her curiosity and predilection for data drive her to design content that is both meaningful and packed with solutions for technology leaders around the world.",
        "ShortBio": "Trying to make sense of the socio-technical mashup that is called software development",
        "Photo": "/assets/img/speakers/EvelynVankelle.jpg",
        "Site": "https://medium.com/@e.vankelle",
        "Twitter": "EvelynvanKelle",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-eva01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T11:30:00",
            "Room": "Hopper",
            "Title": "Socio-technical DDD - Essential social heuristics",
            "Abstract": "Great teams build great products. But what makes a team ‘great’? We have a pretty good understanding of how to improve our code from a technical perspective, but how can we increase the effectiveness of the team creating that code and designs? In the end, software is a technical activity, created by human beings, so it’s crucial to understand the underlying social dynamics that affect our code and designs.\n\nWe should especially try to understand the social heuristics that we are using continuously to make sense of the world. In this talk, Evelyn van Kelle will discuss why we need a shared sense of reality and how this relates to team structure and the quality of your products. Second, she will explore two famous perspectives on sensemaking, and relate them to three social heuristics that are heavily affecting our products and decisions. \n\n- What you see is all there is (availability heuristic)\n- Beware of the experts (related to overconfidence)\n- The curse of first impressions (related to anchoring)\n\nThese heuristics have everything to do with tackling complexity at the heart of software development. In fact, they offer us ways to deal with the complexity we’re facing on a daily basis. If we know the domain, or ‘world’ that we’re operating in, and we are aware of heuristics that may affect our work, we can safely celebrate heuristics and make the best decisions of our lives. ",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "cyriux",
        "FirstName": "Cyrille",
        "LastName": " Martraire",
        "Company": "Arolla",
        "Bio": "Cyrille Martraire (@cyriux on Twitter) is a partner at Arolla (60 consultants), the founder of the Paris Software Craftsmanship community and a regular speaker in international conferences. With 15+ years of experience in startups, software vendors and banks, Cyrille still calls himself a developer. He's passionate about design in every aspect: TDD, BDD and in particular DDD. Cyrille also has an extensive knowledge of capital market finance developed at SG (twice), Engie, CACIB, Sungard and CME. He's also the author of the book Living Documentation on Leanpub.",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/CyrilleMartraire.jpg",
        "Site": "",
        "Twitter": "cyriux",
        "Github": "https://api.github.com/users/cyriux",
        "Updated": true,
        "Sessions": [{
                "Id": "nc18-cma01",
                "Event": "newcrafts2018",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2018-05-17T11:45:00Z",
                "Room": "kay",
                "Title": "Domain-Driven Dependencies",
                "Abstract": "Dependencies come in many forms, from binary libraries to JSON contracts for example. While they are necessary to build complex systems, dependencies are also the cause of a lot of headaches, and learning how to better deal with them makes your life less miserable in the long run.\n\nThrough this talk you'll explore the universe of dependencies in the light of Domain-Driven Design. From the good old Hexagonal Architecture and its variants, the dependencies between Tactical Patterns at small scale to Cohesive Mechanisms or the Levels of Responsibility at a larger scale, you'll discover guiding principles that you can use to improve your design taste for great good.",
                "VideoUrl": "http://videos.ncrafts.io/video/275529991",
                "VideoId": "275529991",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "DDD",
                    "Architecture"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc18-cma02",
                "Event": "newcrafts2018",
                "Format": "pre-conference workshop",
                "DurationMinutes": 360,
                "Order": 2,
                "StartTime": "2018-05-16T08:00:00Z",
                "Room": "",
                "Title": "Living Documentation Step-by-Step",
                "Abstract": "\n      \n**Full day workshop with Cyrille Martraire**\n\n\nIf you prefer coding over writing documentation, then you’ll love Living Documentation! A Living Documentation changes at the same pace as software design and development, from establishment of business goals to capturing domain knowledge, creating architecture, designing software and coding. It builds on top of BDD and DDD, but it also has its own key principles and novels ways to dramatically improve your documentation at minimal extra cost by using well-crafted artifacts and judicious automation.\n\nThis workshop from Cyrille Martraire, the author of the book “Living Documentation” (Addison-Wesley Professional), will guide you on how to implement the approach in your projects. Even if you haven't read the book, this workshop is the right place to learn the main elements of a Living Documentation, step by step through a provided sample Java code base.\n\n**You will learn:**\n\n* How most knowledge is already there somewhere in your artifacts, even in an implicit form\n* How just talking and working together may be enough documentation, and when it does not\n* How to augment the code to make it fully explicit for further use by people and tools\n* How to differentiate between stable and volatile knowledge, and how this informs the way to deal with it\n* How to create zero-maintainance Evergreen Documents\n* How to recognize Shameful Comments and improve your code from there\n* How a word cloud can tell if you're doing your domain model wrong\n* How to generate a Living Glossary straight out of the code\n* How Architectural Decisions Records can help make better decisions\n* How Design Patterns help document a design decision very efficiently\n* How to visualize a design structure by generating a Living Diagram from the code itself\n* How to use plenty of other techniques to improve your particular needs, and the main traps to avoid\n* How failing to do any of the above is in itself a valuable feedback\n* How to introduce the topic in your project and with your colleagues\n\n**What you will need**\n\nA working Java 8 environment with Maven for two attendees\nThe sample project (only using basic Java) will be available from github or from a USB key\n\nRegister Now!\n",
                "VideoUrl": "",
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": false,
                "Tags": [
                    "DDD",
                    "Architecture"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc16-cma02",
                "Event": "newcrafts2016",
                "Format": "lightening",
                "DurationMinutes": 15,
                "Order": 2,
                "StartTime": "2016-05-13T12:10:00Z",
                "Room": "Brahma",
                "Title": "Congruent Design, Salient Testing",
                "Abstract": "Everyone has their own perspective on design, and I'm no exception. In this talk I will explore simple stuff explained in a complicated way, or the other way round, whichever is worse. For example I will talk about congruence as an essential quality of design, and salience as a life-saving approach for testing. Intimidating words indeed, but for real benefits!",
                "VideoUrl": "http://videos.ncrafts.io/video/170138591",
                "VideoId": "170138591",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Design",
                    "Architecture"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc16-cma01",
                "Event": "newcrafts2016",
                "Format": "talk",
                "DurationMinutes": 45,
                "Order": 1,
                "StartTime": "2016-05-12T12:45:00Z",
                "Room": "Orval",
                "Title": "Interviewing Domain Experts: Heuristics from the trenches",
                "Abstract": "Deep conversations with domain experts and careful attention to the language are central in software development and in particular in Domain-Driven Design (DDD). However it takes many years and many failures to get better at this game.\nStill, over time it is possible to extract a growing set of techniques and heuristics that can boost the effectiveness of the interviews with domain experts, to learn faster and converge quickly to better models.\nThere are techniques and heuristics for asking better questions, listening carefully to words and other signals, and for managing credibility as a developer facing business experts.\nIf you think all the above is important, then these interviewing techniques will improve your skills, step up the quality of your collaboration with your domain experts, and will provide benefits for better domain models. And if you find all that boring, then perhaps you could focus your career on Java EE instead.",
                "VideoUrl": "http://videos.ncrafts.io/video/167722763",
                "VideoId": "167722763",
                "HasVideo": true,
                "IsAgendaDefined": true,
                "Tags": [
                    "Practices",
                    "DDD"
                ],
                "Cospeakers": []
            },
            {
                "Id": "nc19-cma01",
                "Event": "newcrafts-paris-2019",
                "Format": "Talk",
                "DurationMinutes": 45,
                "Order": 0,
                "StartTime": "2019-05-17T14:00:00",
                "Room": "Hopper",
                "Title": "Domain Modelling for Digital Transformations",
                "Abstract": "As developers, we are often explained the business domain in a way that is corrupted by implementation concerns or past constraints. This is harmful. To achieve better domain models, we often have to reverse-engineer. Alternatively, we can also explore the domain from its first principles, which are the main concepts or assumptions that cannot be deduced from anything else.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "Indu_alagarsamy",
        "FirstName": "Indu",
        "LastName": " Alagarsamy",
        "Company": null,
        "Bio": "Indu Alagarsamy has been programming for over 15 years. She is currently part of the development team at Particular Software, the makers of NServiceBus, practicing her passion. Indu is also passionate about diversity and inclusiveness in the tech industry. When not programming, she is either rock climbing in sunny Southern California or spending time with her kids and her ginormous chill dog!",
        "ShortBio": "Programmer...Single mom...Passionate about life, distributed computing, SOA, messaging and rock climbing! Currently dev at @particularsw",
        "Photo": "/assets/img/speakers/InduAlagarsamy.jpg",
        "Site": "",
        "Twitter": "Indu_alagarsamy",
        "Github": "indualagarsamy",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-ial01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T15:00:00",
            "Room": "Hopper",
            "Title": "Evolving with the changing requirements - Using DDD and Saga Message Pattern",
            "Abstract": "Modeling business requirements and policies is a tricky thing. Especially when those requirements just keep on changing. Sure, we've all written code before to model requirements, but how can we achieve the dream of evolving the code and at the same time be aligned with the business? After all, isn't that the promise of Domain Driven Design?\n\nBusiness policies are crucial and for us tech people, so is the right way to model them. We want our code to be extensible and to keep up with the changes in business. Time is also a crucial element in modeling business workflows and is implemented in a multitude of ways like timers, scheduled jobs, etc. In this talk, we'll discuss the saga message pattern to see how you can model complex business workflows, and model time as an immutable durable event so you can implement your business policies in such a manner that it truly evolves around your business. Realize the DDD dream.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "alex_schl",
        "FirstName": "Alexandra",
        "LastName": " Schladebeck",
        "Company": null,
        "Bio": "Alex is the head of Software Quality and Test Consulting at BREDEX GmbH. Her passion is communicating with people in IT projects, most specifically about quality. She works with customers, testers, users and developers to help them improve quality in their projects and processes. Her main areas of interest are quality in agile projects, communication, training testers and test automation. You’ll usually find Alex talking about quality and how it affects the whole development process. She’s also a frequent speaker at conferences where she likes to share her project experiences and learn from other practitioners.",
        "ShortBio": "Agile tester. Consultant. International keynote speaker. Works at BREDEX GmbH.",
        "Photo": "/assets/img/speakers/AlexandraSchladebeck.jpg",
        "Site": "http://www.schladebeck.de/",
        "Twitter": "alex_schl",
        "Github": "",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-asc01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T10:30:00",
            "Room": "Liskov",
            "Title": "Exploratory testing for everyone",
            "Abstract": "Exploratory testing is one of the most important tools any project member can have. Any time we “check whether something works”, “test the bug fix” or “perform tests for a new feature”, we can (and should) use exploratory testing techniques.\n\nEven though the technique is so important, it is still misunderstood. It’s thought to be “clicking around” or “unstructured testing”. In this talk, we’ll demonstrate and explain what exploratory testing is and will also provide participants with reasons why they should be using it in their teams. We’ll provide analogies to other work we do in development teams (like debugging or identifying error causes) and look at how exploratory testing can be used beyond the UI.\n\nTo round off, we’ll give hints about where, how and when to use it in your process, be it agile or traditional or a mix of both.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "NikkitaFTW",
        "FirstName": "Sara",
        "LastName": " Vieira",
        "Company": null,
        "Bio": "Developer Advocate at @YLDio. GraphQL and Open Source enthusiast. Conference Speaker and Airport expert. I am also into drums and horror movies.",
        "ShortBio": "International agent of JS Bullshit 🚀 Developer Avocado for [@YLDio](https://twitter.com/YLDio) 🥑",
        "Photo": "/assets/img/speakers/SaraVieira.jpg",
        "Site": "",
        "Twitter": "NikkitaFTW",
        "Github": "SaraVieira/",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-svi01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T14:00:00",
            "Room": "Liskov",
            "Title": "Your Brain doesn't have a Fix Flag",
            "Abstract": "Depression and anxiety are enormous problems in our work and world in general. But they are topics that are not discussed enough and topics that we feel are kind of shameful. In this talk Sara will expose her personal mental health issues that she had for a long time so you don’t ever feel embarrassed again. She will go through what she learned in this horrible horrible journey of putting a fix flag on her brain in the hope that it helps as many people as possible.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "ifesdjeen",
        "FirstName": "Alex",
        "LastName": " Petrov",
        "Company": null,
        "Bio": "Algorithms. Distributed Systems. Algebras.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/AlexPetrov.jpg",
        "Site": "https://medium.com/databasss",
        "Twitter": "ifesdjeen",
        "Github": "https://api.github.com/users/ifesdjeen",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-ape01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T15:00:00",
            "Room": "Liskov",
            "Title": "Storage Systems: The Old, The New, The Overlooked",
            "Abstract": "Material on storage systems primarily covers two types of storage: B-Trees and LSM Trees. When these two are contrasted, we hear about buffering and immutability and it almost starts looking like we can't have immutability without buffering and vice versa. However, if we dig into academic and industry works, we find a lot of useful approaches mixing and matching these properties in different ways.\n\nStarting from the classic B-Tree papers from 1979 to the first LSM Trees paper in 1996,\nand continuing into 2019, we can reproduce and see the line of thinking that have lead the industry where we are today.\n\nBy revisiting this evolution of thinking and systematising the findings, we will improve our understanding of the currently used (and some useful yet overlooked) approaches to durable storage.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "emilybache",
        "FirstName": "Emily",
        "LastName": " Bache",
        "Company": null,
        "Bio": "Emily Bache is a Technical Agile Coach with Praqma. She helps teams to improve their coding and testing skills, including Test-Driven Development. Emily lives in Göteborg, Sweden, but is originally from the UK. She is the author of \"The Coding Dojo Handbook\" and often speaks at international conferences.",
        "ShortBio": "Technical Agile Coach",
        "Photo": "/assets/img/speakers/EmilyBache.jpg",
        "Site": "",
        "Twitter": "emilybache",
        "Github": "emilybache/",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-eba01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T16:00:00",
            "Room": "Liskov",
            "Title": "Technical Leadership for Empowered Teams",
            "Abstract": "As technical leaders we aim to help all the developers in our organizations to make better choices. How do we do that when empowered/Agile/DevOps teams make many choices independently? In this talk you will learn about a coaching technique for building up people, skills and teams.\n\nIn a DevOps world of Agile empowered teams, exerting technical leadership across an organization is challenging. When I was a junior to mid-level developer, the technical leaders in my organization were called Architects. Day to day, I saw little of them. The help they gave me comprised mainly of architectural diagrams to guide development work, and compulsory standard tools and frameworks. Occasionally they would hold workshops with the whole team and go through important technical decisions. These people, although once skilled programmers, did not write code themselves any more.\n\nMore recently, I've found DevOps to be a great way to get teams aligned with sensible shared goals, and to ensure they there is enough automation so there is time available for the important work of developing new features. I'm seeing a lot of people migrating to a microservices architecture, and gaining advantage from smaller, more manageable codebases. This is all good stuff. My biggest concerns now that I am a more senior developer and technical leader, is how to ensure the code produced is of good quality, has automated tests, and follows broad architectural guidelines. These concerns are similar to those of the past, but in my opinion the kind of technical leader we need today looks a lot more like a coach than a traditional architect.\n\nLately I have been using a coaching method that was originally developed by Llewellyn Falco. It involves first teaching each development team how to do mob programming. This is combined with a short daily training class teaching agile development techniques. Once each team has learnt mob programming, you can use this forum to coach them in their codebase. It's the most effective way I have found so far to teach a skill like Test-Driven Development. I believe you can also use this coaching method to encourage consistent use of other coding techniques, libraries and frameworks.\n\nIn this talk you will learn what Mob Programming is, what it is good for, and how I am using it. I hope hearing about my experiences will help you to add this coaching technique to your arsenal as a technical leader in a modern, Agile, DevOps organization.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "MaritvanDijk77",
        "FirstName": "Marit",
        "LastName": " van Dijk",
        "Company": null,
        "Bio": "Marit van Dijk has over 15 years of experience in software development in different roles and companies. She loves building awesome software with amazing people, and is an open source contributor to Cucumber. She enjoys learning new things, as well as sharing knowledge on test automation, Cucumber/BDD and software engineering and blogs at https://medium.com/@mlvandijk. Marit is currently employed at bol.com.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/MaritvanDijk.jpg",
        "Site": "",
        "Twitter": "MaritvanDijk77",
        "Github": "mlvandijk",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-mva01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T10:30:00",
            "Room": "Kare",
            "Title": "Collaborating on Open Source Software; How I Started contributing to Open Source and Why You Should Too",
            "Abstract": "There are several reasons you might want to contribute to open source software. For me, it was that I wanted to learn in a more useful way than doing programming challenges. So I looked into how I could contribute to open source projects that I use myself.\nAfter contributing for almost two years, I notice that I have learned a lot from my contributions (which has been useful at work), as well as have made friends and have become part of a community. \n\nIn this talk I will share my experience with contributing to Cucumber, including an early mistake (merging something that wasn't ready yet) and fixing it with the support of core contributors, and still feeling welcome!\nYou'll learn how how to find your project and contributions to start with, how to connect with the community to make sure your contributions are useful and the many types of contributions you can make. \n\nContributing to open source is a way of paying back to the community. In addition, it is a way for you to learn, collaborate and become part of a community. Getting (constructive) feedback on a pull request and collaborating to make things even better is a great feeling!",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "julienlavigne",
        "FirstName": "Julien",
        "LastName": " Lavigne du Cadet",
        "Company": null,
        "Bio": "Julien has 15+ years of experience in software development. He is leading a team of ~20 people in a fast-paced environment, building a data platform handling billions of events per day in real-time and batch. Experienced agilist, he led several teams through an agile transition over the years and has always been focusing on values and principles over frameworks. He has seen first hand the impact of these transitions over a multi-year period.\n\nHis current team learned flexibility the hard way by being constantly faced with tough decisions on priorities due to the very high number of stakeholders they are working with. They have embraced this challenge and have developed a real taste for experimentation, coming up with new ways to organise their system of work.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/JulienLavigneduCadet.jpg",
        "Site": "",
        "Twitter": "julienlavigne",
        "Github": "NULL",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-jla01",
            "Event": "newcrafts-paris-2019",
            "Format": "Talk",
            "DurationMinutes": 45,
            "Order": 0,
            "StartTime": "2019-05-17T11:30:00",
            "Room": "Kare",
            "Title": "Continuous reteaming: adopt self-selection and start moving people to the work!",
            "Abstract": "What if your engineering teams didn't have to be static? What if you could form them, disband them or adapt their composition every 3 months? And people could pick what they work on?\n\nIs it a recipe for disaster? Or would it give you the flexibility to work on what has the highest business impact, increase engagement and develop your future leaders? What are the tradeoffs? How do you balance short term impact with long term ownership and platform stability?\n\nIn this talk, I'll tell you how I initially led a team of ~20 people from a static structure to something a lot more dynamic where reteaming happens quarterly, and how we are now scaling those practices to 60 people. I'll share with you:\n- How we plan our quarters and let people pick what they work on\n- How we create constraints to make sure the important work gets done while developing knowledge sharing\n- How we use OKRs to create alignment and track progress\n- How we keep in sync and engage with our stakeholders\n- How lead time is decreasing as a result\n\nI'll also share details on our journey: our mistakes, our learnings, what we still struggle with 1 year later and why we think this is strongly aligned with Agile core values!",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "FredericRivain",
        "FirstName": "Frédéric",
        "LastName": " Rivain",
        "Company": "Dashlane",
        "Bio": "Dahslane CTO, currently scaling Identity.\nAgile and Management 3.0 aficionado.\nCo-organizer of CiTy-O, the Paris CTO community",
        "ShortBio": null,
        "Photo": "/assets/img/speakers/FredericRivain.jpg",
        "Site": "",
        "Twitter": "FredericRivain",
        "Github": "NULL",
        "Updated": true,
        "Sessions": [{
                "Id": "nc16-fri01",
                "Event": "newcrafts2016",
                "Format": "lightening",
                "DurationMinutes": 15,
                "Order": 0,
                "StartTime": "2016-05-12T11:45:00Z",
                "Room": "Okult",
                "Title": "Scaling Agile in a Lean Way",
                "Abstract": "How to scale agile practices at the company level in a Lean way, involving all entities, finding ways of bringing back together budget and planning constraints with Agile flexibility, avoiding the risk for too much bureaucracy. We will talk about culture, portfolio, Kanban, and how hard it is.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": [
                    "Agile",
                    "Lean"
                ],
                "Cospeakers": null
            },
            {
                "Id": "nc19-fri01",
                "Event": "newcrafts-paris-2019",
                "Format": "Lightning Talk",
                "DurationMinutes": 20,
                "Order": 0,
                "StartTime": "2019-05-17T14:00:00",
                "Room": "Kare",
                "Title": "From Feature Team to Mission Teams",
                "Abstract": "How Dashlane decided to transform their Product & Engineering Agile Organization from feature teams to Mission teams to maximize product impact, focus and delivery. Learning what works and does not work with feature teams, we decided to evolve the concept to rally the team behind missions supported by OKRs, with a focused product vision and organization.",
                "VideoUrl": null,
                "VideoId": "",
                "HasVideo": false,
                "IsAgendaDefined": true,
                "Tags": null,
                "Cospeakers": null
            }
        ],
        "Languages": [
            "en",
            "fr"
        ]
    },
    {
        "Id": "michelle_avomo",
        "FirstName": "Michelle",
        "LastName": " Avomo",
        "Company": null,
        "Bio": "Fullstack developper  in Paris.\nCraft at heart, I co-host the craft community that helps our colleagues knowing the agiles practices",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/MichelleAvomo.jpg",
        "Site": "",
        "Twitter": "michelle_avomo",
        "Github": "mavomo",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-mav01",
            "Event": "newcrafts-paris-2019",
            "Format": "Lightning Talk",
            "DurationMinutes": 20,
            "Order": 0,
            "StartTime": "2019-05-17T14:25:00",
            "Room": "Kare",
            "Title": "(Quick) kata to explain D from SOLID principles",
            "Abstract": "Understanding or explaining Dependency Inversion can be confusing. <br/>\n\nThe official definition of that principle gives no clue on how it works in real life. Thus, as dev we know it exists and yet, we hardly remember why it has been around for so long. <br/>\n\nThis session is about a kata that will help any developper seeing/showing Dependency Inversion Principle ( D from SOLID) in action.  <br/>\n\nThis session is a  straigthforward *tip and trick* to explain The D from SOLID.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "pascallemerrer",
        "FirstName": "Pascal",
        "LastName": " Le Merrer",
        "Company": null,
        "Bio": "I am a developer at Orange in a team that creates software in the field of cybersecurity. I like to share what I learn. And I'm constantly learning!",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/PascalLeMerrer.jpg",
        "Site": "",
        "Twitter": "pascallemerrer",
        "Github": "pascallemerrer",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-ple01",
            "Event": "newcrafts-paris-2019",
            "Format": "Hands-on",
            "DurationMinutes": 105,
            "Order": 0,
            "StartTime": "2019-05-17T15:00:00",
            "Room": "Kare",
            "Title": "Easy functional programming with elm",
            "Abstract": "Do you want to produce front-end JS code that does not generate any errors at runtime?\n\nRefactor your Single Page Applications without introducing any bugs?\nA tooling as simple as it is efficient?\n\nDuring this workshop, discover elm, a functional language that highlights the developer experience!\n\nPrerequisites: install elm, elm-live and elm-format on your laptop.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "yot88",
        "FirstName": "Yoan",
        "LastName": " Thirion",
        "Company": null,
        "Bio": "I have been cradled by software development for about fifteen years. My various experiences in fields like banking, insurance and industrial environments have allowed me to understand that the current organizations operating system does not work anymore. It kills the motivation of individuals, their potential for creativity and innovation.\nSo after opening my eyes for the first time, I became interested in how to do things differently. \nThis is where my passion for agility and liberated organizations came from. I became addicted to agility from my first reading of the manifesto and am firmly convinced that the only way to work is by considering people as individuals in their own right and no longer as \"resources\". \nIn order to work in an organization that supports these values, I joined Agile Partner. Today I am a craft and agile coach at Agile Partner.\nMy personal aspiration is to help as many teams as possible to deliver in the best possible conditions by helping them develop their capabilities.",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/YoanThirion.jpg",
        "Site": "",
        "Twitter": "yot88",
        "Github": "ythirion",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-yth01",
            "Event": "newcrafts-paris-2019",
            "Format": "Hands-on",
            "DurationMinutes": 105,
            "Order": 0,
            "StartTime": "2019-05-17T10:15:00",
            "Room": "Goldberg",
            "Title": "Xtrem Reading - Read differently and cultivate your collective intelligence",
            "Abstract": "Do you have any books that are dusty? \nDo you really want to read them but can't find the time? \nWe have a solution for you: \"Xtrem reading\".\n\nLearn group reading and read 2 books in 1 hour. \nOur promise to you:\n\n* Boost your collective intelligence\n* Rekindle the flame of reading\n* Plan your next readings\n* Don't read for nothing !",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    },
    {
        "Id": "sadraskol",
        "FirstName": "Thomas",
        "LastName": " Bracher",
        "Company": null,
        "Bio": "Developer at Malt and co-organizer of the Lyon's crafters community. You can ask me questions about Monads and blogging!",
        "ShortBio": "",
        "Photo": "/assets/img/speakers/ThomasBracher.jpg",
        "Site": "",
        "Twitter": "sadraskol",
        "Github": "https://api.github.com/users/ThomasBracher",
        "Updated": true,
        "Sessions": [{
            "Id": "nc19-tbr01",
            "Event": "newcrafts-paris-2019",
            "Format": "Hands-on",
            "DurationMinutes": 105,
            "Order": 0,
            "StartTime": "2019-05-17T15:00:00",
            "Room": "Goldberg",
            "Title": "Let's discover event-based programming!",
            "Abstract": "What's the best way to learn how to develop event driven application than participating to its live implementation?!\nThis session is a mix between an event storm and a live-coding conference to discover event driven programming. We will all design, discuss and decide how to solve a complex domain problem. Whatever your level in event driven systems, come to learn new things or teach others your knowledge.",
            "VideoUrl": null,
            "VideoId": "",
            "HasVideo": false,
            "IsAgendaDefined": true,
            "Tags": null,
            "Cospeakers": null
        }],
        "Languages": null
    }
]